<!DOCTYPE html>

<html lang="ru">
<head>
<title>Динамические модули в приложениях на Android: опыт использования Dynamic Feature Delivery / Хабр</title>
</head>
<body>
<div id="mount"><div data-async-called="true" id="app"><div class="tm-layout__wrapper"><!--[--><!-- --><div></div><!-- --><header class="tm-header" data-test-id="header"><div class="tm-page-width"><!--[--><div class="tm-header__container"><!-- --><span class="tm-header__logo-wrap"><a class="tm-header__logo tm-header__logo_hl-ru tm-header__logo" href="/ru/"><svg class="tm-svg-img tm-header__icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a><span class="tm-header__beta-sign" style="display:none;">β</span></span><!--[--><div class="tm-dropdown tm-header__projects"><div class="tm-dropdown__head"><!--[--><button class="tm-header__dropdown-toggle"><svg class="tm-svg-img tm-header__icon tm-header__icon_dropdown" height="16" width="16"><title>Открыть список</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#arrow-down"></use></svg></button><!--]--></div><!-- --></div><a class="tm-header__become-author-btn" href="/ru/sandbox/start/">Как стать автором</a><div class="tm-feature tm-feature tm-feature_variant-inline tm-header__feature"><!-- --></div><!-- --><!--]--><!-- --></div><!--]--></div></header><div class="tm-layout"><div class="tm-page-progress-bar"></div><div class="tm-base-layout__header_is-sticky tm-base-layout__header" data-menu-sticky="true"><div class="tm-page-width"><!--[--><div class="tm-base-layout__header-wrapper"><div class="tm-main-menu"><div class="tm-main-menu__section"><nav class="tm-main-menu__section-content"><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/feed/">Моя лента</a><!--]--><!--[--><a class="tm-main-menu__item" href="/ru/articles/">Все потоки</a><!--]--><!--[--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/develop/">Разработка</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/admin/">Администрирование</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/design/">Дизайн</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/management/">Менеджмент</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/marketing/">Маркетинг</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/popsci/">Научпоп</a><!--]--><!--]--></nav></div></div><div class="tm-header-user-menu tm-base-layout__user-menu"><a class="tm-header-user-menu__item tm-header-user-menu__search" data-test-id="search-button" href="/ru/search/"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search tm-header-user-menu__icon_dark" height="24" width="24"><title>Поиск</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#search"></use></svg></a><!-- --><!-- --><div class="tm-header-user-menu__item tm-header-user-menu__write"><div><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_write tm-header-user-menu__icon_dark" height="24" width="24"><title>Написать публикацию</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#write"></use></svg></div><!-- --></div><!--[--><div class="tm-header-user-menu__item"><button class="tm-header-user-menu__toggle" data-test-id="user-menu-settings"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_dark" height="24" width="24"><title>Настройки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#page-settings"></use></svg></button></div><a class="tm-header-user-menu__item" href="https://habr.com/kek/v1/auth/habrahabr/?back=/ru/companies/yandex/articles/845344/&amp;hl=ru" rel="nofollow"><!--[--><button class="btn btn_solid btn_small tm-header-user-menu__login" type="button"><!--[-->Войти<!--]--></button><!--]--></a><!--]--><!-- --><!--teleport start--><!--teleport end--><!-- --></div></div><!--]--></div></div><!-- --><div class="tm-page-width"><!--[--><!--]--></div><main class="tm-layout__container"><div class="tm-page" companyname="yandex" data-async-called="true" hl="ru" style="--0c809c5a:16px;--a086013e:100%;--7c457026:0;"><div class="tm-page-width"><!--[--><div class="tm-page__header"><!--[--><div class="tm-company-card__branding tm-company-card__branding_loading tm-company-article__branding" data-test-id="company-card-branding"><div class="tm-company-card__branding-placeholder"><!-- --></div><a href="https://ya.cc/t/RFc9Dm7E6LkpT5"><img class="tm-company-card__branding-image" src="//habrastorage.org/getpro/habr/branding/49e/147/ea3/49e147ea358115b72880620b3113d270.png"/></a></div><!--]--></div><div class="tm-page__wrapper"><div class="tm-page__main_has-sidebar tm-page__main"><div class="pull-down"><!-- --><div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg class="tm-svg-img pull-down__icon pull-down__arrow" height="24" width="24"><title>Обновить</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#pull-arrow"></use></svg></div></div><!--[--><!--[--><div class="tm-article-presenter"><!--[--><!--[--><!-- --><div class="tm-company-profile-card tm-company-article__profile-card"><div class="tm-company-card tm-company-profile-card__info"><div class="tm-company-card__header"><a class="tm-company-card__avatar" href="/ru/companies/yandex/profile/"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="48" src="//habrastorage.org/getpro/habr/company/b02/d9b/1d4/b02d9b1d4a6e64ff069e2ab32fdedae2.png" width="48"/></div></a><!--[--><!-- --><div class="tm-counter-container tm-company-card__rating"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!-- --><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score_no-margin tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">704.76</span></span><!--]--></div><!-- --></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div><!-- --><!--]--></div><div class="tm-company-card__info"><a class="tm-company-card__name" href="/ru/companies/yandex/profile/"><span>Яндекс</span></a><div class="tm-company-card__description">Как мы делаем Яндекс</div></div></div><div class="tm-company-profile-card__buttons"><div class="tm-button-follow tm-company-profile-card__button tm-company-profile-card__button_follow"><!-- --><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div><!-- --><!-- --><!-- --></div></div><!-- --><!--]--><!--]--><div class="tm-article-presenter__body" data-test-id="article-body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><!--[--><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><!--[--><div class="tm-article-presenter__header"><!--[--><!--]--><div class="tm-article-snippet tm-article-snippet tm-article-presenter__snippet"><!--[--><!--]--><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a class="tm-user-info__userpic" data-test-id="user-info-pic" href="/ru/users/Meganster/" title="Meganster"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="24" src="//habrastorage.org/r/w48/getpro/habr/avatars/091/683/f7c/091683f7ce727f7651ab30744f782c8f.jpg" width="24"/></div></a><span class="tm-user-info__user tm-user-info__user_appearance-default" data-test-id="user-info-description"><a class="tm-user-info__username" href="/ru/users/Meganster/">Meganster <!-- --></a><!--[--><span class="tm-article-datetime-published"><time datetime="2024-10-17T07:00:12.000Z" title="2024-10-17, 10:00">17  окт  2024 в 10:00</time></span><!--]--></span></span></div><!-- --></div><h1 class="tm-title tm-title_h1" data-test-id="articleTitle" lang="ru"><span>Динамические модули в приложениях на Android: опыт использования Dynamic Feature Delivery</span></h1><div class="tm-article-snippet__stats" data-test-id="articleStats"><!-- --><div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Время на прочтение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#clock"></use></svg></span><span class="tm-article-reading-time__label">18 мин</span></div><span class="tm-icon-counter tm-data-icons__item"><svg class="tm-svg-img tm-icon-counter__icon" height="24" width="24"><title>Количество просмотров</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-views"></use></svg><span class="tm-icon-counter__value" title="2844">2.8K</span></span></div><div class="tm-publication-hubs__container" data-test-id="articleHubsList"><div class="tm-publication-hubs"><!--[--><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/companies/yandex/articles/"><!--[--><span>Блог компании Яндекс</span><!-- --><!--]--></a></span><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/hubs/mobile_dev/"><!--[--><span>Разработка мобильных приложений</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/hubs/kotlin/"><!--[--><span>Kotlin</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/hubs/android_dev/"><!--[--><span>Разработка под Android</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/hubs/flutter/"><!--[--><span>Flutter</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><!--]--></div></div><!-- --><!-- --><!-- --></div></div><!--[--><!-- --><div class="tm-article-body" data-gallery-root="" lang="ru"><div><!--[--><!--]--></div><div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/149/e68/24e/149e6824e7e92de87bfe4f3ec87365f8.png" height="1687" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/149/e68/24e/149e6824e7e92de87bfe4f3ec87365f8.png" width="3000"/></figure><p>Размер приложения часто играет важную роль в восприятии его пользователями и принятии ими решения о скачивании. <a href="https://medium.com/googleplaydev/shrinking-apks-growing-installs-5d3fcba23ce2">Исследования</a> показывают, что чем меньше размер APK, тем выше вероятность его установки и тем реже оно оказывается в списке на удаление. Конечно же, это важно для команды Яндекс Go, так как наше приложение непрерывно развивается.</p><p>Для внедрения одной из SDK, основанной на Flutter, мы прибегли к механизму Dynamic Feature Delivery (DFD). Но оказалось, что в русскоязычном сегменте информации о DFD крайне мало, поэтому я решил поделиться нашим опытом работы с этим механизмом на Android с Google Play Feature Delivery Library. Также мы нашли способ интегрировать динамические фичи на устройства без Google Play, но это тема для отдельной статьи, поэтому в рамках данного материала я на этом останавливаться не буду.</p><p>Сегодня мы подробно разберём, как интегрировать механизм DFD в современную архитектуру Android‑приложения с использованием корутин, а также протестируем загрузку и установку динамического модуля, использующего Flutter.</p><h2>SplitInstallManager: что это и как работает</h2><p>В центре механизма DFD находится <code>SplitInstallManager</code>, который предоставляет библиотека <code>com.google.android.play:feature-delivery</code>. <code>SplitInstallManager</code> служит интерфейсом для управления динамическими модулями приложения. Он позволяет разработчикам загружать и устанавливать отдельные динамические модули по мере необходимости, что значительно снижает размер основной части приложения.</p><p>Простой пример использования <code>SplitInstallManager</code> выглядит следующим образом:</p><pre><code class="kotlin">val request = SplitInstallRequest.newBuilder()
    .addModule("dynamic_feature")
    .build()

splitInstallManager.startInstall(request)
    .addOnSuccessListener { sessionId -&gt;
        // Хендлим успешно скачанную и установленную фичу
    }
    .addOnFailureListener { exception -&gt;
        // Хендлим ошибку
    }</code></pre><p>Перечислю основные функции <code>SplitInstallManager</code>:</p><ol><li><p><strong>Проверка установленных модулей.</strong> Метод <code>SplitInstallManager.getInstalledModules()</code> позволяет определить, установлены ли уже необходимые модули.</p></li><li><p><strong>Запрос установки модуля.</strong> Если модуль не установлен, создаётся объект <code>SplitInstallRequest</code> с указанием его имени. Этот запрос передаётся в метод <code>SplitInstallManager.startInstall()</code>, который возвращает <code>Task&lt;Integer&gt;</code>, представляющий идентификатор сессии установки. Этот идентификатор может быть использован повторно при последующих запросах установки.</p></li><li><p><strong>Отслеживание прогресса установки.</strong> Для мониторинга состояния установки используется метод <code>SplitInstallManager.registerListener()</code>, который позволяет зарегистрировать <code>SplitInstallStateUpdatedListener</code>. Этот слушатель будет получать обновления о текущем состоянии установки, таком как прогресс, статус и возникшие ошибки.</p></li><li><p><strong>Обработка ошибок.</strong> При установке нескольких модулей одновременно через <code>SplitInstallRequest.addModule(...)</code> и последующем запросе установки только одного из них может возникнуть ошибка <code>INCOMPATIBLE_WITH_EXISTING_SESSION</code>. Ошибки до получения идентификатора сессии или во время установки также будут обработаны через <code>addOnFailureListener</code>.</p></li></ol><p>Однако, несмотря на свои преимущества, использование <code>SplitInstallManager</code> связано с определёнными неудобствами. Интерфейс этого класса достаточно громоздкий и требует выполнения нескольких шагов, включая создание запроса на скачивание, обработку различных состояний процесса и управление ошибками. Это усложняет код и затрудняет его поддержку.</p><p>Кроме того, интеграция <code>SplitInstallManager</code> в приложения, следующие принципам чистой архитектуры, представляет дополнительную сложность. Чистая архитектура предполагает разделение бизнес‑логики, дата‑слоя и пользовательского интерфейса, что обеспечивает гибкость и лёгкость тестирования. Однако метод <code>startConfirmationDialogForResult</code> в <code>SplitInstallManager</code> нарушает принцип единственной ответственности (Single Responsibility Principle), поскольку требует непосредственного взаимодействия с UI при возникновении статуса <code>SplitInstallSessionStatus.REQUIRES_USER_CONFIRMATION</code>. Это смешивает обязанности дата‑слоя и слоя UI, затрудняя его интеграцию в приложение и усложняя тестирование и поддержание кода.</p><p>Для преодоления этих трудностей потребуется создание абстракций, которые будут скрывать детали реализации <code>SplitInstallManager</code>, изолируя бизнес‑логику от инфраструктурных аспектов и упрощая тестирование. В следующем разделе мы рассмотрим, как создать такую обёртку и какие методы она должна включать для обеспечения удобства и эффективности.</p><h2>Реализация обёртки для SplitInstallManager</h2><p>Чтобы упростить управление динамическими функциями в приложении и обеспечить стандартизированный подход к работе с различными модулями, начнём с создания маркерного интерфейса, который будут реализовывать все динамические фичи. Это позволит унифицировать работу с модулями и упростит их интеграцию в приложение.</p><pre><code class="kotlin">interface DynamicFeatureApi</code></pre><p>Для бо́льшей гибкости мы установим обязательное условие: реализации интерфейса <code>DynamicFeatureApi</code> будут представлены через <code>object Kotlin</code>, как рекомендуется в <a href="https://developer.android.com/guide/playcore/feature-delivery/on-demand#access_base_code_different_module">гайдах Google</a>. Это позволит запускать функциональность динамических модулей непосредственно через объект. Такой подход требует добавления соответствующих правил для ProGuard и R8, чтобы сохранить классы и поля, необходимые для корректной работы с рефлексией.</p><pre><code class="kotlin">-keep public class * implements com.yandex.go.dynamic.api.DynamicFeatureApi
-keepclassmembers public class * implements com.yandex.go.dynamic.api.DynamicFeatureApi {
  static &lt;fields&gt;;
}</code></pre><p>Эти правила позволят сохранить имена объектов, реализующих <code>DynamicFeatureApi,</code> чтобы мы могли успешно обращаться к ним через рефлексию после успешной установки модуля.</p><p>Для корректной работы каждой динамической фичи необходимо указать соответствующие настройки в <code>AndroidManifest</code>:</p><pre><code class="kotlin">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:dist="http://schemas.android.com/apk/distribution"
    xmlns:tools="http://schemas.android.com/tools"&gt;

  &lt;dist:module
      dist:instant="false"
      tools:node="replace"
      dist:title="@string/dynamic_feature_title"&gt;
    &lt;dist:delivery&gt;
      &lt;dist:on-demand /&gt;
    &lt;/dist:delivery&gt;
    &lt;dist:fusing dist:include="false" /&gt;
  &lt;/dist:module&gt;
&lt;/manifest&gt;</code></pre><p>Эти настройки определяют, что фичу можно загрузить по запросу (<code>dist:on-demand</code>) и она не включается в процесс fusing. Это позволяет контролировать установку фичи отдельно от основного APK.</p><p>Также создадим класс <code>DynamicFeature</code>, в котором будет храниться уникальный идентификатор для каждой динамической фичи и имя целевого <code>object</code> с указанием его package. Особенно важно, что это имя модуля в gradle, так как именно по нему происходит загрузка нужного динамического модуля. Это позволит однозначно связывать динамические модули с их реализациями, гарантируя правильную инициализацию и использование функциональности после установки.</p><pre><code class="kotlin">enum class DynamicFeature(
    val id: String,
    val targetClass: String
) {
    // Перечисление динамических фич в приложении
}</code></pre><p>В дальнейшем <code>id</code> из <code>DynamicFeature</code> будет использоваться как уникальный идентификатор для каждой реализации <code>DynamicFeatureApi</code> и для работы с динамическим модулем через <code>DynamicFeatureLoader</code>. Это обеспечит однозначную идентификацию и упрощённое управление динамическими фичами.</p><p>Для интеграции динамических фич в многомодульном проекте необходимо пройти несколько этапов, начиная с создания самого модуля и заканчивая настройкой его загрузки, установки и использования. </p><p>В нашем примере проект многомодульный, и каждая фича разделена на два модуля: <code>api</code> и <code>impl</code>. Сам <code>DynamicFeatureLoader</code> также будет рассмотрен как отдельная фича, которая будет разделена на такие же два модуля: <code>api</code> и <code>impl</code>. Все переиспользуемые интерфейсы и базовые контракты будут сложены в модуль <code>:features:dynamic:api</code>, что обеспечит единый интерфейс для работы с динамическими модулями. В свою очередь, реализация, включая класс <code>DynamicFeatureLoaderImpl</code>, будет находиться в модуле <code>:features:dynamic:impl</code>. Это поможет легко обновлять или модифицировать логику загрузки динамических фич без изменения контракта в других частях приложения.</p><p>Теперь рассмотрим процесс создания новой динамической фичи подробно:</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/c74/dc8/863/c74dc8863108100fc6b463c09e354897.png" height="1332" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/c74/dc8/863/c74dc8863108100fc6b463c09e354897.png" width="2232"/></figure><ol><li><p>Создаём новый модуль, который станет dynamic. Например, <code>:features:awesome_feature</code>.</p></li><li><p>Создаём модуль <code>:features:awesome_feature:api</code>. В нём описывается внешний контракт фичи для всех остальных потребителей в проекте. Это позволит отделить реализацию фичи от её api.</p></li><li><p>Создаём модуль <code>:features:awesome_feature:impl</code>. Этот модуль подключает api фичи (<code>:features:awesome_feature:api</code>) и описывает базовую реализацию фичи, включая UI, связанный с её динамической загрузкой. Важно: в этот модуль не добавляем тяжёлые библиотеки или ресурсы.</p></li><li><p>Добавляем интерфейс для работы с dynamic‑частью в модуль <code>:features:awesome_feature:impl</code> (например, <code>interface AwesomeFeatureDynamicApi : DynamicFeatureApi</code>).</p></li><li><p>Создаём объект реализации динамической части: в модуле <code>:features:awesome_feature:dynamic</code> создаём объект <code>object AwesomeFeatureDynamicImpl : AwesomeFeatureDynamicApi</code>.</p></li><li><p>Обязательно добавляем новый модуль в <code>enum DynamicFeature</code>. Это позволит удобно управлять всеми динамическими фичами проекта.</p></li><li><p>Используем DynamicFeatureLoader в модуле <code>:features:awesome_feature:impl</code> для загрузки и установки нужных модулей при необходимости.</p></li></ol><p><code>SplitInstallManager</code> предназначен для проверки установленных модулей и их скачивания при необходимости. Исходя из этого, можно выделить состояния модуля или фичи. Теперь рассмотрим список возможных состояний фичи и покажем схему с переходами между этими состояниями.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/6d5/0ad/5be/6d50ad5be5a16bafa0bc9c76753ac092.png" height="800" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/6d5/0ad/5be/6d50ad5be5a16bafa0bc9c76753ac092.png" width="1200"/></figure><p>Эти состояния охватывают полный жизненный цикл загрузки и установки динамической фичи:</p><ul><li><p><strong>Unavailable.</strong> Фича недоступна в приложении. Например, её функциональность не предусмотрена для определённых сборок.</p></li><li><p><strong>NotLoaded.</strong> Фича доступна для загрузки, но ещё не загружена. Это начальное состояние фичи, которая доступна, но ещё не установлена.</p></li><li><p><strong>Loading.</strong> Фича находится в процессе загрузки или установки.</p></li><li><p><strong>Error.</strong> Произошла ошибка во время загрузки.</p></li><li><p><strong>Ready.</strong> Фича загружена, установлена и готова к использованию.</p></li></ul><p>Таким образом описываем <code>sealed interface DynamicFeatureState</code>:</p><pre><code class="kotlin">sealed interface DynamicFeatureState&lt;out T : DynamicFeatureApi&gt; {
    class Unavailable&lt;T : DynamicFeatureApi&gt; : DynamicFeatureState&lt;T&gt;
    class NotLoaded&lt;T : DynamicFeatureApi&gt; : DynamicFeatureState&lt;T&gt;
    class Loading&lt;T : DynamicFeatureApi&gt; : DynamicFeatureState&lt;T&gt;
    class Error&lt;T : DynamicFeatureApi&gt;(val error: Throwable) : DynamicFeatureState&lt;T&gt;
    class Ready&lt;T : DynamicFeatureApi&gt;(val instance: T) : DynamicFeatureState&lt;T&gt;
}</code></pre><p>Далее определим основные методы для нашей обёртки вокруг <code>SplitInstallManager</code>. Эти методы обеспечат удобный интерфейс для работы с динамическими функциями и модулями.</p><p>Наша обёртка должна включать следующую функциональность:</p><pre><code class="kotlin">interface DynamicFeatureLoader {
    fun &lt;T : DynamicFeatureApi&gt; feature(feature: DynamicFeature): DynamicFeatureState&lt;T&gt;
    fun &lt;T : DynamicFeatureApi&gt; featureFlow(feature: DynamicFeature): Flow&lt;DynamicFeatureState&lt;T&gt;&gt;
    fun &lt;T : DynamicFeatureApi&gt; startDownload(feature: DynamicFeature): Deferred&lt;T?&gt;
    fun prefetch(feature: DynamicFeature)
}</code></pre><p>Эти методы охватывают ключевые сценарии использования:</p><ul><li><p><code>feature</code> — позволяет получить текущее состояние динамической фичи;</p></li><li><p><code>featureFlow</code> — обеспечивает возможность подписки на изменения состояния фичи в процессе её загрузки и установки;</p></li><li><p><code>startDownload</code> — запускает загрузку фичи и позволяет дождаться завершения загрузки, а также отслеживать состояние фичи через подписчиков <code>featureFlow</code>.</p></li><li><p><code>prefetch</code> — загрузка фичи в фоне без возможности отслеживания процесса загрузки.</p></li></ul><p>Если способ использования и назначение метода <code>startDownload</code> понятны, то необходимость метода <code>prefetch</code> не так очевидна. Этот метод позволяет отложить установку модуля до момента, когда приложение будет неактивно (метод <code>deferredInstall</code> у <code>SplitInstallManager</code>). Документация описывает это как «best‑effort when the app is in the background». На практике модуль загружается, когда приложение закрыто и Google Play устанавливает обновления. Отслеживать процесс в этом случае невозможно, так как он выполняется при неактивном приложении.</p><p>Теперь приступим к реализации интерфейса <code>DynamicFeatureLoader</code>. В частности, создадим его реализацию <code>DynamicFeatureLoaderImpl</code>, которую сделаем синглтоном, чтобы централизованно обрабатывать загрузку всех динамических фич в приложении. Для хранения состояния используем хеш‑мапу <code>featureStateFlowsMap</code>, где ключом будет <code>DynamicFeature</code>, а значением — мутабельный <code>StateFlow</code> с состоянием <code>DynamicFeatureState&lt;DynamicFeatureApi&gt;</code>.</p><pre><code class="kotlin">@Singleton
class DynamicFeatureLoaderImpl @Inject constructor(
  private val context: Context,
  private val scope: CoroutineScope
) : DynamicFeatureLoader {

    private val featureStateFlowsMap = mutableMapOf&lt;DynamicFeature, MutableStateFlow&lt;DynamicFeatureState&lt;DynamicFeatureApi&gt;&gt;&gt;()

    private val splitInstallManager: SplitInstallManager by lazy {
        SplitInstallManagerFactory.create(context)
    }
}</code></pre><p>Метод <code>feature</code> позволяет получить текущее состояние динамической фичи. Мы проверяем, установлена ли фича в данный момент, и возвращаем соответствующее состояние. Это позволяет разработчикам быстро проверить, доступна ли фича и готова ли она к использованию, или же требуется её загрузка.</p><pre><code class="kotlin">override fun &lt;T : DynamicFeatureApi&gt; feature(feature: DynamicFeature): DynamicFeatureState&lt;T&gt; {
    return obtainFeatureStartState(feature)
}

private fun &lt;T : DynamicFeatureApi&gt; obtainFeatureStartState(feature: DynamicFeature): DynamicFeatureState&lt;T&gt; {
    val possibleClass = getDynamicFeatureClass(feature)
    if (possibleClass != null &amp;&amp; feature.id in splitInstallManager.installedModules) {
        return DynamicFeatureState.Ready(getFeatureInstance(feature, possibleClass))
    }

    return DynamicFeatureState.NotLoaded()
}

private fun &lt;T : DynamicFeatureApi&gt; getFeatureInstance(feature: DynamicFeature, targetClass: Class&lt;*&gt;): T {
    val instanceField = targetClass.declaredFields.find { it.name == "INSTANCE" &amp;&amp; it.type == targetClass }
        ?: throw IllegalStateException("Invalid feature entry point. ${feature.targetClass} must be a Kotlin object")

    return instanceField.get(null) as T
}

private fun getDynamicFeatureClass(feature: DynamicFeature): Class&lt;*&gt;? = try {
    Class.forName(feature.targetClass)
} catch (ex: ClassNotFoundException) {
    null
} catch (ex: LinkageError) {
    null
}</code></pre><p>Метод <code>featureFlow</code> возвращает <code>Flow</code> состояний фичи, на который можно подписаться. Это удобно для отслеживания процесса загрузки и реагирования на изменения состояния в реальном времени. Использование <code>Flow</code> упрощает работу с асинхронными событиями загрузки в реактивном стиле.</p><pre><code class="kotlin">override fun &lt;T : DynamicFeatureApi&gt; featureFlow(feature: DynamicFeature): Flow&lt;DynamicFeatureState&lt;T&gt;&gt; {
    return flow {
        emitAll(internalFeatureStateFlow(feature))
    }
}

private suspend fun &lt;T : DynamicFeatureApi&gt; internalFeatureStateFlow(feature: DynamicFeature): MutableStateFlow&lt;DynamicFeatureState&lt;T&gt;&gt; {
    return mapMutex.withLock {
        featureStateFlowsMap.computeIfAbsent(feature) {
            MutableStateFlow(obtainFeatureStartState&lt;T&gt;(feature))
        } as MutableStateFlow&lt;DynamicFeatureState&lt;T&gt;&gt;
    }
}</code></pre><p>Метод <code>startDownload</code> инициирует загрузку динамической фичи и возвращает результат в виде <code>Deferred</code>. Основная задача при реализации этого метода — работа с <code>SplitInstallStateUpdatedListener</code>, который позволяет отслеживать статус загрузки и установки динамической фичи в режиме реального времени. Поскольку <code>DynamicFeatureLoaderImpl</code> использует корутины, мы будем использовать <code>suspendCancellableCoroutine</code> для оборачивания вызова метода <code>splitInstallManager.startInstall</code> и регистрации <code>SplitInstallStateUpdatedListener</code>. Начнём с реализации логики статусов динамических фич, соответствующей ранее описанным переходам.</p><pre><code class="kotlin">override fun &lt;T : DynamicFeatureApi&gt; startDownload(feature: DynamicFeature): Deferred&lt;T?&gt; {
    return scope.async {
      try {
        val featureStateFlow = internalFeatureStateFlow&lt;T&gt;(feature)
        val shouldStartDownload = startDownloadingMutex.withLock {
          val currentValue = featureStateFlow.value
          currentValue is DynamicFeatureState.NotLoaded || currentValue is DynamicFeatureState.Error
        }

        if (shouldStartDownload) {
          downloadFeature(feature, featureStateFlow)
        }

        val terminalState = featureStateFlow.first { it is DynamicFeatureState.Ready || it is DynamicFeatureState.Error }
        if (terminalState is DynamicFeatureState.Ready) {
          terminalState.instance
        } else {
          null
        }
      } catch (throwable: Throwable) {
        if (throwable is CancellationException) {
          throw throwable
        }

        internalFeatureStateFlow&lt;T&gt;(feature).emit(DynamicFeatureState.Error(throwable))
        null
      }
    }
}</code></pre><p>Теперь реализуемТеперь реализуем метод <code>downloadFeature</code>. Поскольку у нас есть <code>MutableStateFlow</code> для каждой динамической фичи в <code>featureStateFlowsMap</code>, сигнатура метода будет следующей:</p><pre><code class="kotlin">private suspend fun &lt;T : DynamicFeatureApi&gt; downloadFeature(
    feature: DynamicFeature,
    featureState: MutableStateFlow&lt;DynamicFeatureState&lt;T&gt;&gt;
) {
    // Реализация
}</code></pre><p>В этом методе мы будем использовать <code>SplitInstallStateUpdatedListener</code> для отслеживания статусов установки и загрузки фичи. Один из неочевидных моментов — обработка статуса <code>SplitInstallSessionStatus.REQUIRES_USER_CONFIRMATION</code>, который требует вызова <code>splitInstallManager.startConfirmationDialogForResult</code>, передавая одним из аргументов <code>Activity</code>. Поскольку <code>DynamicFeatureLoaderImpl</code> работает на уровне нашего приложения, оптимальным решением для получения <code>Activity</code> будет использование <code>WeakReference</code>.</p><details class="spoiler"><summary>Реализация слушателя будет выглядеть следующим образом</summary><div class="spoiler__content"><pre><code class="kotlin">private fun &lt;T : DynamicFeatureApi&gt; getInstallStateListener(
    feature: DynamicFeature,
    onSuccess: (T) -&gt; Unit,
    onError: (Throwable) -&gt; Unit,
    featureState: MutableStateFlow&lt;DynamicFeatureState&lt;T&gt;&gt;,
    getCurrentSessionId: () -&gt; Int
): SplitInstallStateUpdatedListener {
    return SplitInstallStateUpdatedListener { state -&gt;
      // Пропускаем все апдейты состояния, не относящиеся к нашей сессии, — skip other requests state update
      if (state.sessionId() != getCurrentSessionId()) return@SplitInstallStateUpdatedListener

      val newState: DynamicFeatureState&lt;T&gt;? = when (state.status()) {
        SplitInstallSessionStatus.UNKNOWN -&gt; null
        SplitInstallSessionStatus.REQUIRES_USER_CONFIRMATION -&gt; SplitHelper.activity?.get()?.let {
          showConfirmationDialog(state, it, feature)
          null
        }

        SplitInstallSessionStatus.PENDING,
        SplitInstallSessionStatus.DOWNLOADING,
        SplitInstallSessionStatus.DOWNLOADED,
        SplitInstallSessionStatus.INSTALLING -&gt; loading()

        SplitInstallSessionStatus.INSTALLED -&gt; {
          val instance = getFeatureInstance&lt;T&gt;(feature, getDynamicFeatureClass(feature)!!)
          onSuccess.invoke(instance)
          DynamicFeatureState.Ready(instance)
        }

        SplitInstallSessionStatus.FAILED -&gt; {
          onError.invoke(DynamicFeatureDownloadingException())
          DynamicFeatureState.Error(DynamicFeatureDownloadingException())
        }

        SplitInstallSessionStatus.CANCELING -&gt; loading()
        SplitInstallSessionStatus.CANCELED -&gt; {
          onError.invoke(DynamicFeatureCanceledException())
          DynamicFeatureState.Error(DynamicFeatureCanceledException())
        }

        else -&gt; null
      }

      if (newState != null) {
        featureState.value = newState
      }
    }
}</code></pre><p></p></div></details><details class="spoiler"><summary>А тут соберём метод downloadFeature</summary><div class="spoiler__content"><pre><code class="kotlin">private suspend fun &lt;T : DynamicFeatureApi&gt; downloadFeature(
    feature: DynamicFeature,
    featureState: MutableStateFlow&lt;DynamicFeatureState&lt;T&gt;&gt;
) {
    suspendCancellableCoroutine { continuation -&gt;
      val request = SplitInstallRequest.newBuilder()
        .addModule(feature.id)
        .build()

      var currentSessionId = 0
      val installStateListener = getInstallStateListener(
        feature = feature,
        onSuccess = { _ -&gt;
          continuation.resume(Unit)
        },
        onError = {
          continuation.resume(Unit)
        },
        featureState = featureState,
        getCurrentSessionId = { currentSessionId }
      )
      splitInstallManager.registerListener(installStateListener)

      continuation.invokeOnCancellation {
        splitInstallManager.unregisterListener(installStateListener)
        if (!splitInstallManager.installedModules.contains(feature.id)) {
          splitInstallManager.cancelInstall(currentSessionId)
          featureState.tryEmit(DynamicFeatureState.Error(DynamicFeatureCanceledException()))
        }
      }

      splitInstallManager.startInstall(request)
        .addOnSuccessListener { sessionId -&gt;
          currentSessionId = sessionId
        }
        .addOnFailureListener { e -&gt;
          featureState.value = DynamicFeatureState.Error(e)
        }
    }
}</code></pre><p></p></div></details><p>Метод <code>prefetch</code> используется для предварительной загрузки динамической фичи в фоновом режиме. Он не позволяет отслеживать прогресс обновления, как это делает <code>SplitInstallStateUpdatedListener</code>, но избавляет от необходимости обрабатывать статус <code>SplitInstallSessionStatus.REQUIRES_USER_CONFIRMATION</code>.</p><pre><code class="kotlin">override fun prefetch(feature: DynamicFeature) {
    splitInstallManager.deferredInstall(listOf(feature.id))
        .addOnSuccessListener {
            // do something
        }
        .addOnFailureListener {
            // do something
        }
}</code></pre><p>Этот набор методов позволяет удобно работать с динамическими фичами, следуя принципам чистой архитектуры. Обёртка скрывает детали реализации <code>SplitInstallManager</code>, предоставляя разработчикам простой и понятный интерфейс для управления загрузкой и установкой динамических модулей приложения.</p><p>Отдельно стоит отметить, что после успешной установки динамической фичи необходимо обеспечить корректное подключение новой функциональности. Вызовем методы, которые подготавливают приложение к использованию установленных модулей:</p><pre><code class="kotlin">SplitCompat.installActivity(activity)
SplitInstallHelper.updateAppInfo(activity) // если это instant app</code></pre><p>Эти методы необходимы, чтобы динамическая фича корректно интегрировалась в приложение. <code>SplitCompat.installActivity(activity)</code> обновляет контекст activity, позволяя модулю работать корректно, а <code>SplitInstallHelper.updateAppInfo(activity)</code> обновляет информацию о приложении. Только после выполнения этих действий можно безопасно обращаться к object‑точке входа динамической фичи.</p><h2>Реализация и тестирование DynamicFeatureLoader</h2><p>Для проверки корректности работы и стабильности кода нам необходим надёжный инструмент тестирования, особенно когда дело касается взаимодействия с <code>SplitInstallManager</code>.</p><p>Google предоставляет полезный инструмент для тестирования под названием <a href="https://developer.android.com/reference/com/google/android/play/core/splitinstall/testing/FakeSplitInstallManager.html">FakeSplitInstallManager</a>. Он позволяет эмулировать процесс загрузки и установки динамических фич, что упрощает локальное тестирование. Вы можете использовать <code>FakeSplitInstallManager</code>, чтобы проверить, как приложение обрабатывает различные сценарии установки, включая успешные и ошибочные состояния. Однако стоит отметить, что единственный метод для эмуляции ошибок в этом классе — <code>setShouldNetworkError</code>, что ограничивает возможности тестирования.</p><p>Ещё одна важная проблема заключается в несовместимости <code>FakeSplitInstallManager</code> с динамическими фичами, реализованными на базе Flutter. При попытке протестировать такую динамическую фичу будем стабильно получать краш приложения с ошибкой вида:</p><pre><code class="kotlin">[ERROR:flutter/runtime/dart_vm_data.cc(20)] VM snapshot invalid and could not be inferred from settings.
[ERROR:flutter/runtime/dart_vm.cc(270)] Could not set up VM data to bootstrap the VM from.
[ERROR:flutter/runtime/dart_vm_lifecycle.cc(85)] Could not create Dart VM instance.</code></pre><p>Раз за разом мы будем получать ошибку запуска виртуальной машины для Dart. При этом ошибка не воспроизводится в сборке с прод‑окружением с использованием боевой версии <code>SplitInstallManager</code>. К сожалению, это проблема, решения для которой Google не предлагает. Такая особенность делает тестирование динамических фич, использующих Flutter, сложным.</p><p>Для решения этой задачи и обеспечения гибкости тестирования можно создать собственный инструмент — <code>EmulationSplitInstallManager</code>, который будет выступать связующим звеном между <code>SplitInstallManager</code> и тестами. Это позволит легко эмулировать процессы скачивания и установки модулей. В результате реализация <code>DynamicFeatureLoaderImpl</code> будет выглядеть следующим образом:</p><pre><code>@Singleton
class DynamicFeatureLoaderImpl @Inject constructor(
  private val context: Context,
  private val scope: CoroutineScope
) : DynamicFeatureLoader {

    private val featureStateFlowsMap = mutableMapOf&lt;DynamicFeature, MutableStateFlow&lt;DynamicFeatureState&lt;DynamicFeatureApi&gt;&gt;&gt;()

    private val splitInstallManager: SplitInstallManager by lazy {
        when (val type = emulationType()) {
            null -&gt; SplitInstallManagerFactory.create(context)
            EmulationType.GOOGLE_FAKE -&gt; FakeSplitInstallManagerFactory.create(context)
            EmulationType.EMULATION_SUCCESS,
            EmulationType.EMULATION_INSTALL_ERROR,
            EmulationType.EMULATION_DOWNLOAD_ERROR -&gt; EmulationSplitInstallManager(context, type)
        }
    }
}</code></pre><p>Стоит отметить, что внутренняя реализация <code>EmulationSplitInstallManager</code> заслуживает отдельной статьи, поэтому в рамках текущего материала мы не будем рассматривать её детально. Принципиальное отличие использования этого менеджера заключается в том, что динамическая фича поставляется сразу вместе с приложением. Процесс скачивания и установки эмулируется с возможностью намеренно вызывать ошибки на разных этапах, что делает тестирование Flutter динамических модулей более гибким и удобным для команды QA.</p><p>В этом примере <code>EmulationSplitInstallManager</code> предоставляет возможность гибко управлять процессом загрузки и установки, эмулируя различные состояния и ошибки. Это обеспечивает возможность глубокого тестирования всех возможных сценариев работы с динамическими фичами и позволяет отладить логику взаимодействия с <code>SplitInstallManager</code> в условиях, приближенных к реальным.</p><hr/><p>В этой статье мы подробно рассмотрели процесс управления динамическими фичами в Android‑приложениях с использованием <code>SplitInstallManager</code>, предоставленного Google. Мы разобрали основные аспекты реализации, такие как установка модулей и управление их состоянием, а также разработали удобный интерфейс <code>DynamicFeatureLoader</code> для взаимодействия с механизмом динамической загрузки модулей в приложении.</p><p>В частности, мы обсудили создание обёрток для работы с <code>SplitInstallManager</code>, что позволило нам выделить важные методы, такие как <code>startDownload</code> и <code>prefetch</code>, и упростить управление состояниями динамических фич. Переход от обычного использования <code>SplitInstallManager</code> к более гибкому и удобному интерфейсу <code>DynamicFeatureLoader</code> позволил проще интегрировать динамические фичи в приложения, соответствующие принципам чистой архитектуры.</p><p>Одним из ключевых этапов нашего подхода стало тестирование. Мы рассмотрели инструменты для локального тестирования, включая <code>FakeSplitInstallManager</code>, и выявили его ограничения, особенно в контексте приложений, использующих Flutter. В качестве решения этой проблемы мы предложили подход с созданием собственного <code>EmulationSplitInstallManager</code>, который предоставляет гибкие возможности для эмуляции различных сценариев и состояний.</p><p>Таким образом, мы построили полноценное решение для управления динамическими фичами, которое не только соответствует требованиям современного приложения, но и легко тестируется и поддерживается. Интеграция <code>SplitInstallManager</code> в ваш проект с помощью описанного подхода позволит вам эффективно управлять динамическими модулями и обеспечивать высокое качество пользовательского опыта.</p><p></p></div></div></div><!-- --><!-- --></div><!-- --><!-- --></div><!--]--><!-- --><div class="tm-article-presenter__meta" data-test-id="article-meta-links"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[android+development]"><span>android development</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[dynamic+feature]"><span>dynamic feature</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0+%D0%BC%D0%BE%D0%B1%D0%B8%D0%BB%D1%8C%D0%BD%D1%8B%D1%85+%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B9]"><span>разработка мобильных приложений</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[android]"><span>android</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kotlin]"><span>kotlin</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[in-app]"><span>in-app</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[flutter]"><span>flutter</span></a><!--]--></li><!--]--><!-- --></ul></div><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/companies/yandex/articles/"><!--[--><span>Блог компании Яндекс</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/hubs/mobile_dev/"><!--[--><span>Разработка мобильных приложений</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/hubs/kotlin/"><!--[--><span>Kotlin</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/hubs/android_dev/"><!--[--><span>Разработка под Android</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/hubs/flutter/"><!--[--><span>Flutter</span><!--]--></a><!--]--></li><!--]--><!-- --></ul></div></div><!-- --><!--]--></article><!--]--></div><!-- --></div><div class="tm-article-sticky-panel" data-test-id="article-sticky-panel" style=""><div class="tm-data-icons tm-data-icons tm-data-icons_space-big tm-article-sticky-panel__icons" data-test-id="article-stats-icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article" height="24" width="24"><title>Всего голосов 12: ↑12 и ↓0</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-rating"></use></svg><span class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating tm-votes-meter__value" data-test-id="votes-meter-value" title="Всего голосов 12: ↑12 и ↓0">+17</span></div><!--teleport start--><!--teleport end--><!-- --></div><!-- --><!-- --><button class="bookmarks-button tm-data-icons__item" title="Добавить в закладки" type="button"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Добавить в закладки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-favorite"></use></svg></span><span class="bookmarks-button__counter" title="Количество пользователей, добавивших публикацию в закладки">20</span></button><div class="tm-sharing tm-data-icons__item" title="Поделиться"><button class="tm-sharing__button" type="button"><svg class="tm-sharing__icon" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z" fill="currentColor"></path></svg></button><!--teleport start--><!--teleport end--></div><div class="tm-article-comments-counter-link tm-data-icons__item" title="Читать комментарии"><a class="tm-article-comments-counter-link__link" data-test-id="counter-comments" href="/ru/companies/yandex/articles/845344/comments/"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value">3</span><!--]--></a><!-- --></div><!--[--><!--[--><!--[--><!-- --><!--]--><!--]--><!--]--><!--teleport start--><!--teleport end--><!-- --></div></div></div><!--[--><!--]--><div class="tm-article-presenter__footer"><!--[--><!--[--><div class="tm-article-blocks"><!-- --><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><!-- --><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><!--[--><div class="tm-article-author" data-test-id="article-author-info"><!--[--><!--[--><div class="tm-article-author__company"><div class="tm-article-author__company-card"><div class="tm-company-snippet"><a class="tm-company-snippet__logo-link" href="/ru/companies/yandex/profile/"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="40" src="//habrastorage.org/getpro/habr/company/b02/d9b/1d4/b02d9b1d4a6e64ff069e2ab32fdedae2.png" width="40"/></div></a><div class="tm-company-snippet__info"><a class="tm-company-snippet__title" data-test-id="company-title" href="/ru/companies/yandex/profile/"><span>Яндекс</span></a><div class="tm-company-snippet__description">Как мы делаем Яндекс</div></div></div><div class="tm-article-author__buttons"><!-- --><!-- --></div></div><div class="tm-article-author__company-contacts"><!--[--><a class="tm-article-author__contact" href="https://github.com/yandex" rel="noopener" target="_blank">Github</a><!--]--></div><div class="tm-article-author__separator"></div></div><!--]--><!--]--><div class="tm-user-card tm-user-card tm-user-card_variant-article tm-article-author__user-card" data-async-called="true"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a class="tm-user-card__userpic tm-user-card__userpic_size-40" href="/ru/users/Meganster/"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" src="//habrastorage.org/getpro/habr/avatars/091/683/f7c/091683f7ce727f7651ab30744f782c8f.jpg"/></div></a><div class="tm-user-card__meta"><div class="tm-counter-container tm-karma tm-karma" title=" 7 голосов "><div class="tm-counter-container__header"><!--[--><div class="karma-display positive" data-v-7635202e="">7</div><!-- --><!--]--></div><div class="tm-counter-container__footer"><!--[--><div class="tm-karma__text">Карма</div><!--teleport start--><!--teleport end--><!--]--></div></div><div class="tm-counter-container" title="Рейтинг пользователя"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!-- --><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">0</span></span><!--]--></div><!-- --></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div></div></div></div><div class="tm-user-card__info tm-user-card__info_variant-article tm-user-card__info"><div class="tm-user-card__title tm-user-card__title_variant-article tm-user-card__title"><span class="tm-user-card__name tm-user-card__name_variant-article tm-user-card__name">Yury Vanyashkin</span><a class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article" href="/ru/users/Meganster/"> @Meganster</a><!-- --></div><p class="tm-user-card__short-info tm-user-card__short-info_variant-article tm-user-card__short-info" data-test-id="user-card-speciality">Android разработчик в Yandex Go</p></div></div><div class="tm-user-card__buttons tm-user-card__buttons_variant-article tm-user-card__buttons"><!-- --><div class="tm-user-card__button"><div class="tm-button-follow tm-user-card__button-follow"><!-- --><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div></div><!-- --><div class="tm-user-card__button tm-user-card__button_write" data-test-id="user-card-conversations"><svg class="tm-svg-img tm-user-card__button-icon" height="16" width="16"><title>Отправить сообщение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#mail"></use></svg></div><!-- --></div><!-- --></div><!-- --></div><!--]--></div><!--]--><!-- --></section><!-- --><!--[--><!--]--><!--]--><div class="tm-article-blocks__comments"><div class="tm-article-page-comments" id="publication-comments"><div><!--[--><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style" data-test-id="counter-comments" href="/ru/companies/yandex/articles/845344/comments/"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted"> Комментарии 3 </span><!--]--></a><!-- --></div><!--]--></div></div></div><!--[--><!--[--><!--]--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2><!--[--><!--]--></div><!-- --></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><!--[--><!--[--><div class="tm-tabs tm-tabs"><div class=""><!--[--><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim tm-tabs__tab-link">Лучшие за сутки</button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_slim tm-tabs__tab-link">Похожие</button></span><!--]--></div><!-- --></div><div class="similar-and-daily__tab-view"><div class="placeholder-wrapper"><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="tm-placeholder-article-cards"><!--[--><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><!--]--></div><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --></div><!-- --></div><!--]--><!--]--></div><!--]--><!-- --></section><!--[--><!--[--><div class="placeholder-wrapper"><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="tm-placeholder-inset tm-placeholder-vacancies"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div><div class="tm-placeholder-inset__body"><ul class="tm-placeholder-list"><!--[--><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><!--]--></ul></div><div class="tm-placeholder-inset__footer"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --></div><!--]--><!--]--><!-- --><!--[--><!--]--><!--]--></div><!--]--><!--]--></div></div><!--]--><!--]--></div></div><div class="tm-page__sidebar"><!--[--><div class="tm-layout-sidebar"><div class="tm-layout-sidebar__placeholder_initial"></div><div class="tm-sexy-sidebar_initial tm-sexy-sidebar" style="margin-top:0px;"><!--[--><!--]--><!-- --><div class="tm-layout-sidebar__placeholder_initial"></div><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Информация</h2><!--[--><!--]--></div><!-- --></header><!--[--><div class="tm-block__body tm-block__body"><!--[--><div class="tm-company-basic-info"><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Сайт</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[--><a class="tm-company-basic-info__link" href="http://www.ya.ru/" target="_blank">www.ya.ru</a><!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Дата регистрации</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[--><time datetime="2008-08-09T07:42:31.000Z" title="2008-08-09, 11:42">9  августа  2008</time><!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Дата основания</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[--><time datetime="1997-09-22T20:00:00.000Z" title="1997-09-23, 00:00">23  сентября  1997</time><!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Численность</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[-->свыше 10 000 человек<!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Местоположение</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[-->Россия<!--]--></dd></dl><!-- --></div><!--]--></div><!--]--><!-- --></section><div class="tm-company-widgets"><!--[--><!--]--></div><!-- --><!-- --><!--]--><!-- --></div></div><!--]--></div></div><!-- --><!--]--></div></div></main><!-- --></div><div class="tm-footer-menu"><div class="tm-page-width"><!--[--><div class="tm-footer-menu__container"><!--[--><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Ваш аккаунт</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr/?back=/ru/companies/yandex/articles/845344/&amp;hl=ru" rel="nofollow" target="_self">Войти</a></li><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr-register/?back=/ru/companies/yandex/articles/845344/&amp;hl=ru" rel="nofollow" target="_self">Регистрация</a></li><!--]--></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Разделы</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/articles/">Статьи</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/news/">Новости</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/hubs/">Хабы</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/companies/">Компании</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/users/">Авторы</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/sandbox/">Песочница</a></li><!--]--></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Информация</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/help/">Устройство сайта</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/authors/codex/">Для авторов</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/companies/corpblogs/">Для компаний</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/docs/transparency/">Документы</a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/agreement/?hl=ru_RU" target="_blank">Соглашение</a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/confidential/?hl=ru_RU" target="_blank">Конфиденциальность</a></li><!--]--></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Услуги</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/corporate-blogs/" target="_blank">Корпоративный блог</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/advertising/" target="_blank">Медийная реклама</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/native-special/" target="_blank">Нативные проекты</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/education-programs/" target="_blank">Образовательные программы</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/hello-startup/" target="_blank">Стартапам</a></li><!--]--></ul></div></div><!--]--></div><!--]--></div></div><div class="tm-footer"><div class="tm-page-width"><!--[--><div class="tm-footer__container"><!-- --><div class="tm-footer__social"><!--[--><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Facebook</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Twitter</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>VK</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-vk"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Telegram</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Youtube</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://dzen.ru/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Яндекс Дзен</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-dzen"></use></svg></a><!--]--></div><!--teleport start--><!--teleport end--><button class="tm-footer__link"><!-- --> Настройка языка</button><a class="tm-footer__link" href="/ru/feedback/">Техническая поддержка</a><div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2025, </span><span class="tm-copyright__name"><a class="tm-copyright__link" href="https://company.habr.com/" rel="noopener" target="_blank">Habr</a></span></span></div></div><!--]--></div></div><!-- --><!--]--></div><!-- --></div></div>
<div id="overlays"><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--></div>
</body>
</html>
