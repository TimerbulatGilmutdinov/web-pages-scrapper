<!DOCTYPE html>

<html lang="ru">
<head>
<title>Ловушки интеграционного тестирования в Spring Boot / Хабр</title>
</head>
<body>
<div id="mount"><div data-async-called="true" id="app"><div class="tm-layout__wrapper"><!--[--><!-- --><div></div><!-- --><header class="tm-header" data-test-id="header"><div class="tm-page-width"><!--[--><div class="tm-header__container"><!-- --><span class="tm-header__logo-wrap"><a class="tm-header__logo tm-header__logo_hl-ru tm-header__logo" href="/ru/"><svg class="tm-svg-img tm-header__icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a><span class="tm-header__beta-sign" style="display:none;">β</span></span><!--[--><div class="tm-dropdown tm-header__projects"><div class="tm-dropdown__head"><!--[--><button class="tm-header__dropdown-toggle"><svg class="tm-svg-img tm-header__icon tm-header__icon_dropdown" height="16" width="16"><title>Открыть список</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#arrow-down"></use></svg></button><!--]--></div><!-- --></div><a class="tm-header__become-author-btn" href="/ru/sandbox/start/">Как стать автором</a><div class="tm-feature tm-feature tm-feature_variant-inline tm-header__feature"><!-- --></div><!-- --><!--]--><!-- --></div><!--]--></div></header><div class="tm-layout"><div class="tm-page-progress-bar"></div><div class="tm-base-layout__header_is-sticky tm-base-layout__header" data-menu-sticky="true"><div class="tm-page-width"><!--[--><div class="tm-base-layout__header-wrapper"><div class="tm-main-menu"><div class="tm-main-menu__section"><nav class="tm-main-menu__section-content"><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/feed/">Моя лента</a><!--]--><!--[--><a class="tm-main-menu__item" href="/ru/articles/">Все потоки</a><!--]--><!--[--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/develop/">Разработка</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/admin/">Администрирование</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/design/">Дизайн</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/management/">Менеджмент</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/marketing/">Маркетинг</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/popsci/">Научпоп</a><!--]--><!--]--></nav></div></div><div class="tm-header-user-menu tm-base-layout__user-menu"><a class="tm-header-user-menu__item tm-header-user-menu__search" data-test-id="search-button" href="/ru/search/"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search tm-header-user-menu__icon_dark" height="24" width="24"><title>Поиск</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#search"></use></svg></a><!-- --><!-- --><div class="tm-header-user-menu__item tm-header-user-menu__write"><div><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_write tm-header-user-menu__icon_dark" height="24" width="24"><title>Написать публикацию</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#write"></use></svg></div><!-- --></div><!--[--><div class="tm-header-user-menu__item"><button class="tm-header-user-menu__toggle" data-test-id="user-menu-settings"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_dark" height="24" width="24"><title>Настройки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#page-settings"></use></svg></button></div><a class="tm-header-user-menu__item" href="https://habr.com/kek/v1/auth/habrahabr/?back=/ru/companies/cian/articles/802673/&amp;hl=ru" rel="nofollow"><!--[--><button class="btn btn_solid btn_small tm-header-user-menu__login" type="button"><!--[-->Войти<!--]--></button><!--]--></a><!--]--><!-- --><!--teleport start--><!--teleport end--><!-- --></div></div><!--]--></div></div><!-- --><div class="tm-page-width"><!--[--><!--]--></div><main class="tm-layout__container"><div class="tm-page" companyname="cian" data-async-called="true" hl="ru" style="--0c809c5a:16px;--a086013e:100%;--7c457026:0;"><div class="tm-page-width"><!--[--><div class="tm-page__header"><!--[--><!--]--></div><div class="tm-page__wrapper"><div class="tm-page__main_has-sidebar tm-page__main"><div class="pull-down"><!-- --><div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg class="tm-svg-img pull-down__icon pull-down__arrow" height="24" width="24"><title>Обновить</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#pull-arrow"></use></svg></div></div><!--[--><!--[--><div class="tm-article-presenter"><!--[--><!--[--><!-- --><div class="tm-company-profile-card tm-company-article__profile-card"><div class="tm-company-card tm-company-profile-card__info"><div class="tm-company-card__header"><a class="tm-company-card__avatar" href="/ru/companies/cian/profile/"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="48" src="//habrastorage.org/getpro/habr/company/27c/b0e/f98/27cb0ef980f904c9c6b3babbba85903b.jpg" width="48"/></div></a><!--[--><!-- --><div class="tm-counter-container tm-company-card__rating"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!-- --><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">67.39</span></span><!--]--></div><!-- --></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div><!-- --><!--]--></div><div class="tm-company-card__info"><a class="tm-company-card__name" href="/ru/companies/cian/profile/"><span>Циан</span></a><div class="tm-company-card__description">В топ-5 лучших ИТ-компаний рейтинга Хабр.Карьера</div></div></div><div class="tm-company-profile-card__buttons"><div class="tm-button-follow tm-company-profile-card__button tm-company-profile-card__button_follow"><!-- --><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div><!-- --><!-- --><!-- --></div></div><!-- --><!--]--><!--]--><div class="tm-article-presenter__body" data-test-id="article-body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><!--[--><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><!--[--><div class="tm-article-presenter__header"><!--[--><!--]--><div class="tm-article-snippet tm-article-snippet tm-article-presenter__snippet"><!--[--><!--]--><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a class="tm-user-info__userpic" data-test-id="user-info-pic" href="/ru/users/a_tanoshkin/" title="a_tanoshkin"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="24" src="//habrastorage.org/r/w48/getpro/habr/avatars/0f0/2ff/d43/0f02ffd43ad42af4d232bf5b44769051.png" width="24"/></div></a><span class="tm-user-info__user tm-user-info__user_appearance-default" data-test-id="user-info-description"><a class="tm-user-info__username" href="/ru/users/a_tanoshkin/">a_tanoshkin <!-- --></a><!--[--><span class="tm-article-datetime-published"><time datetime="2024-03-25T09:32:39.000Z" title="2024-03-25, 12:32">25  мар  2024 в 12:32</time></span><!--]--></span></span></div><!-- --></div><h1 class="tm-title tm-title_h1" data-test-id="articleTitle" lang="ru"><span>Ловушки интеграционного тестирования в Spring Boot</span></h1><div class="tm-article-snippet__stats" data-test-id="articleStats"><div class="tm-article-complexity tm-article-complexity_complexity-low"><span class="tm-svg-icon__wrapper tm-article-complexity__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Уровень сложности</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#complexity-low"></use></svg></span><span class="tm-article-complexity__label">Простой</span></div><div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Время на прочтение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#clock"></use></svg></span><span class="tm-article-reading-time__label">16 мин</span></div><span class="tm-icon-counter tm-data-icons__item"><svg class="tm-svg-img tm-icon-counter__icon" height="24" width="24"><title>Количество просмотров</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-views"></use></svg><span class="tm-icon-counter__value" title="6158">6.2K</span></span></div><div class="tm-publication-hubs__container" data-test-id="articleHubsList"><div class="tm-publication-hubs"><!--[--><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/companies/cian/articles/"><!--[--><span>Блог компании Циан</span><!-- --><!--]--></a></span><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/hubs/kotlin/"><!--[--><span>Kotlin</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><!--]--></div></div><div class="tm-article-labels" data-test-id="articleLabels"><div class="tm-article-labels__container"><div class="tm-publication-label tm-publication-label_variant-case"><span>Кейс</span></div><!--[--><!--]--></div></div><!-- --><!-- --></div></div><!--[--><!-- --><div class="tm-article-body" data-gallery-root="" lang="ru"><div><!--[--><!--]--></div><div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><p>Некоторые экземпляры из коллекции проблем, с которыми часто сталкивается разработчик в мире тестирования микросервисов.</p><figure class=""><img data-src="https://habrastorage.org/getpro/habr/upload_files/509/dea/fe6/509deafe6d5032b02c8022f9f27f793b.png" height="512" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/509/dea/fe6/509deafe6d5032b02c8022f9f27f793b.png" width="512"/></figure><h2>Вступление — пирамида тестирования, микросервисы и ипотека   </h2><p>В современном IT микросервисная архитектура стала нормой. У неё много преимуществ, включая гибкость и масштабируемость, но полное тестирование продуктов, созданных по её принципам, является сложной и затратной задачей. Стоимость этого тестирования возрастает по мере того, как мы переходим от модульных тестов отдельных сервисов к более обширным приёмочным тестам и далее. В результате современные подходы к разработке накладывают на инженеров дополнительные обязательства по обеспечению высокого качества каждого из сервисов системы, а цена, пропущенного на более низкой ступени пирамиды, тестирования дефекта многократно возрастает. Подробнее о пирамиде можно прочесть, например, <a href="https://habr.com/ru/articles/672484/"><u>здесь</u></a>, главный принцип: в основании — дешёвые модульные тесты, их много, чем выше поднимаемся, тем выше и дороже тесты, соответственно, тем их меньше. На практике это означает, что наличие качественных и надёжных модульных и интеграционных тестов для каждого сервиса жизненно необходимо для успешного развития проекта, иначе придётся столкнуться с большими сложностями при развитии. Ведь интеграционные тесты в процессе разработки ПО подобны строительному инспектору, проверяющему качество и целостность здания после завершения строительства. Как инспектор, интеграционные тесты проверяют, что все компоненты и элементы программного обеспечения корректно соединены и функционируют вместе, как и должно быть в хорошо построенном доме.</p><p>И кстати про недвижимость: меня зовут Александр Таношкин, я ведущий инженер-программист в компании Циан с 2018 года, моя работа связана с маркетплейсом ипотечных предложений от банков - сервисом Циан.Ипотека. Мы предоставляем клиентам возможность выбора наилучших ипотечных условий от различных банков. Архитектура продукта построена на микросервисах, мы работаем с такими технологиями, как Java/Kotlin/Spring, PostgreSQL, Kafka, Kubernetes и Яндекс.Облако. С релиза первой версии нашего продукта прошло уже немало времени, и за это время мы собрали внушительную коллекцию «ловушек» интеграционного тестирования — проблем, обычно выражающихся в непредсказуемых и неочевидных падениях тестов, расследование которых может быть увлекательно, но крайне затратно. В статье я поделюсь некоторыми экземплярами коллекции и предложу практические рекомендации, как их избежать, чтобы сосредоточиться на главной задаче — обеспечении качества.</p><p>Иллюстрируя ловушки тестирования, я написал микросервис-пример (CRUD API + асинхронная логика), использующий довольно распространённый сейчас стек Gradle/Spring Boot/Kotlin/Postgres/Kafka, при этом описанные здесь проблемы и способы их решения релевантны для других технологий, отличаться будут детали реализации. Сервис-пример состоит из типовых для подобного ПО слоёв — контроллеры, валидаторы, бизнес-логика, репозитории и прочее. В статье для краткости приведены лишь фрагменты тестового кода, иллюстрирующие ту или иную ловушку, полную версию кода можно найти <a href="https://github.com/tanoshkin-cian/integration-testing-pitfalls"><u>здесь</u></a>.</p><p>Для тестирования используются возможности Spring, Junit 5 и testcontainers. Большим плюсом этого стека является автоматизированный запуск реалистичного окружения: хорошо известная аннотация <em>@SpringBootTest</em> позволяет проверять приложение в целом (поднимается контекст, объединяющий все компоненты, что позволяет проверять приложение в наиболее реалистичных условиях), однако, это далеко не единственное преимущество:  используя принцип <a href="https://en.wikipedia.org/wiki/Convention_over_configuration"><u>convention over configuration</u></a>, мы получаем ещё и эксклюзивный <a href="https://cloud.google.com/migrate/kf/docs/2.2/how-to/backing-services"><u>backing service</u></a> — например, полноценную БД — за счет нескольких аннотаций: во фрагменте ниже мы декларативно запрашиваем контейнер с БД postgres и просим Spring Boot настроить конфигурацию соединения с этой БД.</p><pre><code>@Container
@ServiceConnection
var postgresContainer = PostgreSQLContainer(DockerImageName.parse("postgres:13"))</code></pre><pre><code>@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
@Testcontainers
class DirtyDbPitfall</code></pre><p>В некоторых тестах, чтобы воспроизвести ту или иную проблему, я перенастроил стандартный порядок запуска. Не рекомендуется так поступать в настоящем проекте без крайней необходимости:  </p><pre><code>@TestMethodOrder(MethodOrderer.MethodName::class)</code></pre><p>Для запуска примеров из проекта вам потребуется Java 21, Docker-окружение и следующие команды:</p><p><em>Запуск всех тестов проекта</em></p><pre><code>./gradlew clean test</code></pre><p><em>Гранулярный запуск (отдельные классы или методы)</em> </p><pre><code>./gradlew clean test --tests '*DirtyDbPitfall.createApiTest'
BUILD SUCCESSFUL in 21s

./gradlew clean test --tests '*DirtyDbPitfall.removeApiTest'
BUILD SUCCESSFUL in 21s

./gradlew clean test --tests '*DirtyDbPitfall'              
DirtyDbPitfall &gt; Removal API test FAILED
    org.opentest4j.AssertionFailedError at DirtyDbPitfall.kt:79
BUILD FAILED in 21s</code></pre><p>Симптомы, по которым можно опознать ловушки тестирования, практически всегда будут выражаться в <a href="https://vladislaveremeev.gitbook.io/qa_bible/avtomatizaciya-beta/chto-takoe-flaky-tests"><u>моргающих</u></a> тестах, либо в ситуации, когда два теста, будучи запущенными по отдельности — зелёные, при запуске вместе — краснеют.</p><p>Приступим к осмотру коллекции.</p><p>В конце статьи я собрал таблицу с краткой выжимкой по каждой ловушке, способах её обхода и применяемых инструментах.</p><h2>Коллекция ловушек</h2><h3>Грязная база (в примере DirtyDbPitfall.kt)  </h3><p><strong>Суть ловушки</strong>: несколько тестов, составляющих один набор (например, несколько @Test-методов в рамках Test-класса), проверяют функциональность, связанную с чем-то внешним, имеющим состояние (самое очевидное — БД), при этом состояние не очищается перед запуском каждого теста.</p><p><strong>Как такое может случиться? </strong>Например, два теста появились в одном классе по результатам вливания двух веток в основную. Первоначально каждый из них работал корректно как при индивидуальном прогоне, так и при запуске всех тестов проекта, однако после слияния они стали несовместимыми из-за взаимных «претензий» на состояние, например, базы данных.</p><p><strong>Пример</strong></p><p>Один из тестов проверяет API создания/чтения: в начале вызываются POST-запросы для создания ресурса, после чего происходит чтение списка:</p><pre><code>@Test
@DisplayName("Creation API test")
fun createApiTest() {
   // given
   val wantedEntitiesCount = 4

   // when
   val creationResponses = (1..4).map {
       restClient.post().uri("/persons").body(mapOf("name" to "John Doe")).retrieve().toBodilessEntity()
   }
   assertThat(creationResponses).allMatch { it.statusCode == HttpStatusCode.valueOf(200) }

   // then
   val businessEntities = restClient.get().uri("/persons").retrieve().body&lt;List&lt;Person&gt;&gt;()
   assertThat(businessEntities?.size).isEqualTo(wantedEntitiesCount)
}</code></pre><p>Другой тест тоже использует API создания нового ресурса, но затем его удаляет и проверяет, что в результате удаления ресурсов не осталось:</p><pre><code>@Test
@DisplayName("Removal API test")
fun removeApiTest() {
   // given
   val creationResponse =
       restClient.post().uri("/persons").body(mapOf("name" to "John Doe")).retrieve().toEntity&lt;Person&gt;()
   assertThat(creationResponse.statusCode).isEqualTo(HttpStatusCode.valueOf(200))
   val createdId = creationResponse.body?.id ?: fail { "Created person ID could not be null" }

   // when
   val removalResponse =
       restClient.delete().uri("/persons/{createdId}", createdId).retrieve().toBodilessEntity()
   assertThat(removalResponse.statusCode).isEqualTo(HttpStatusCode.valueOf(200))

   // then
   val businessEntities = restClient.get().uri("/persons").retrieve().body&lt;List&lt;Person&gt;&gt;()
   assertThat(businessEntities?.size).isEqualTo(0)
}</code></pre><p>Если мы запустим оба теста, сборка упадет со следующей ошибкой:</p><pre><code>expected: 0
 but was: 4
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at tano.testingpitfalls.dirtydb.DirtyDbPitfall.removeApiTest(DirtyDbPitfall.kt:79)</code></pre><p>Причина — тесты используют реальную БД, запущенную в контейнере и не чистят её перед запуском, результат — в БД остаются данные, созданные в результате предыдущих запусков тестов (API создания), а получаем мы красный тест при проверке API удаления.</p><p><strong>Обход</strong></p><p>Чистим БД, используя хуки JUnit (аннотация <em>@BeforeEach</em>). При этом логика очистки может быть инкапсулирована в отдельном тестовом компоненте (в примере он называется SystemUnderTest). Это позволяет при потенциальном будущем усложнении системы (например, если возникнет задача реализации <a href="https://www.dolthub.com/blog/2022-11-03-soft-deletes/"><u>soft delete</u></a>) сохранить сам код тестового сценария от замутнения деталями реализации очистки. Даже если тесту в соответствии со сценарием нужно определённое состояние, лучше не полагаться на результаты работы других тестов сценария, а явно привести систему в нужное состояние (с помощью тех же хуков JUnit, либо явно — при подготовке к выполнению сценария в самом тестовом методе).</p><figure class="full-width"><img alt="Схема обхода ловушки «Грязная база»" data-src="https://habrastorage.org/getpro/habr/upload_files/73c/127/649/73c127649b1f8c0ca55ea6a6803b887f.png" height="831" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/73c/127/649/73c127649b1f8c0ca55ea6a6803b887f.png" title="Схема обхода ловушки «Грязная база»" width="976"/><div><figcaption>Схема обхода ловушки «Грязная база»</figcaption></div></figure><pre><code>@BeforeEach
fun setUp() {
    systemUnderTest.cleanDb()
}</code></pre><p><strong>Вариации на тему этой проблемы</strong></p><p>«Загрязняться» может не только БД, но и любые ресурсы, переживающие по времени жизни один тест. Общий принцип тут тот же — очищать (если нет возможности сделать это через программный интерфейс, можно пойти по пути пересоздания контейнера).</p><h3>Нежданный планировщик (UnexpectedSchedulerPitfall.kt)</h3><p><strong>Суть ловушки</strong>: в сервисе существует планировщик, запускающий операции по расписанию или с фиксированной частотой. В рамках теста, проверяющего нечто непосредственно не связанное с работой планировщика, мы сталкиваемся с побочными эффектами работы функций, инициируемых планировщиком (например, удалением данных, которые мы собирались в тесте проверить).</p><p><strong>Как такое может случиться? </strong>Например, планировщик появился после реализации тех тестов, на которые он в результате стал влиять, другой вариант — у него изменились параметры запуска..</p><p><strong>Пример</strong></p><p>В приведённом проекте есть класс LeadRemovalSchedulerService, он инициирует удаление пользователей с определённым статусом, настроен (для демонстрационных целей) на очень частый (раз в 10 миллисекунд) запуск:</p><pre><code>class LeadRemovalSchedulerService(
   private val personService: PersonService,
) {

   private val logger = KotlinLogging.logger {}

   @Scheduled(fixedRate = 10)
   fun removeLeads() {
       val count = personService.removeLeads()
       if (count &gt; 0) {
           logger.info { "Removed $count leads" }
       }
   }

}</code></pre><p>Интеграционный тест создаёт запись через API и собирается её модифицировать:</p><pre><code>@Test
fun testModification() {
   // given
   val creationResponse =
       restClient.post().uri("/persons").body(mapOf("name" to "John Doe")).retrieve().toEntity&lt;Person&gt;()
   Assertions.assertThat(creationResponse.statusCode).isEqualTo(HttpStatusCode.valueOf(200))
   val createdId = creationResponse.body?.id ?: fail { "Created person ID could not be null" }

   // when
   val modificationResponse =
       restClient.patch().uri("/persons/{createdId}", createdId).body(mapOf("status" to "CLIENT")).retrieve()
           .toBodilessEntity()


   // then
   Assertions.assertThat(modificationResponse.statusCode).isEqualTo(HttpStatusCode.valueOf(200))
}</code></pre><p>Но падает, потому что пока он делал запрос, планировщик удалил данные из БД:</p><pre><code>org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 Internal Server Error: "{"timestamp":"2024-03-14T06:41:38.650+00:00","status":500,"error":"Internal Server Error","path":"/persons/1"}"
	
Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: tano.testingpitfalls.domain.IllegalInputDataException: No person with ID 1 found] with root cause

tano.testingpitfalls.domain.IllegalInputDataException: No person with ID 1 found
	at tano.testingpitfalls.service.PersonService.modifyPersonStatus(PersonService.kt:30)</code></pre><p><strong>Обход</strong></p><p>Работа планировщика должна быть предсказуемой. Для этого можно ввести параметр, позволяющий его отключать (как минимум, для целей теста):</p><pre><code>@Configuration
@ConditionalOnProperty(prefix = "scheduler", name = ["disabled"], havingValue = "false", matchIfMissing = true)
@EnableScheduling
class SchedulerConfiguration</code></pre><pre><code>@SpringBootTest(
   webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT,
   properties = ["scheduler.disabled=true"]
)</code></pre><p>Если необходимо проверить работу самого планировщика, на это нужно написать отдельный тест, при этом параметры (частота, расписание) самого планировщика также следует выносить в конфигурацию и проверять отдельно от прочих тестовых сценариев.</p><figure class="full-width"><img alt="Схема обхода ловушки «Нежданный планировщик»" data-src="https://habrastorage.org/getpro/habr/upload_files/48a/c14/6a9/48ac146a99d990875561278adc1a8208.png" height="1049" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/48a/c14/6a9/48ac146a99d990875561278adc1a8208.png" title="Схема обхода ловушки «Нежданный планировщик»" width="1301"/><div><figcaption>Схема обхода ловушки «Нежданный планировщик»</figcaption></div></figure><h3>Который час?! (ClockPitfall.kt)</h3><p><strong>Суть ловушки</strong>: в сервисе есть функциональность, работа которой зависит от текущей даты и/или времени, при этом на уровне теста это никак не контролируется, из-за чего работоспособность теста зависит от того, когда он запускается.</p><p><strong>Как такое может случиться? </strong>Самый вероятный сценарий — появление функциональности, работающей со временем после реализации некоего базового сценария и тестов для него.</p><p><strong>Пример</strong></p><p>В проекте-примере PATH API (<em>@PatchMapping("/{personId}"</em>) позволяет модифицировать поле status у person, в соответствующем сервисе (PersonService) это вызывает дополнительный побочный эффект — отправка приветствия. Результат этого шага мы фиксируем в БД:</p><pre><code>@Transactional
fun modifyPersonStatus(personId: Long, newPersonStatus: PersonStatus): PersonEntity {
   val personForModification = personEntityRepository.findByIdOrNull(id = personId) ?: throw IllegalInputDataException("No person with ID $personId found")
   personForModification.status = newPersonStatus
   if (newPersonStatus == PersonStatus.CLIENT) {
       val greetingSent = greetingService.greet(name = personForModification.name)
       personForModification.greetingSent = greetingSent
   }
   return personForModification
}</code></pre><p>Интеграционный тест проверяет работу соответствующего API, проверяя значение поля greetingMessageSent:</p><pre><code>@Test
fun testGreetings() {
   // given
   val creationResponse =
       restClient.post().uri("/persons").body(mapOf("name" to "John Doe")).retrieve().toEntity&lt;Person&gt;()
   assertThat(creationResponse.statusCode).isEqualTo(HttpStatusCode.valueOf(200))
   val createdId = creationResponse.body?.id ?: fail { "Created person ID could not be null" }

   // when
   val modificationResponse =
       restClient.patch().uri("/persons/{createdId}", createdId).body(mapOf("status" to "CLIENT")).retrieve()
           .toEntity&lt;Person&gt;()
   assertThat(modificationResponse.statusCode).isEqualTo(HttpStatusCode.valueOf(200))


   // then
   assertThat(modificationResponse.body?.greetingMessageSent).isEqualTo(true)
}</code></pre><p>Чтобы понять, где здесь ловушка, посмотрим на метод greet GreetingServiceа: логика здесь простая — если пользователь стал нашим клиентом, нужно его поздравить, отослав сообщение:</p><pre><code>fun greet(name: String): Boolean {
   if (clock.workingHours()) {
       // We will skip the sending logic itself for the sake of simplicity
       logger.info { "Greeting message for $name was sent successfully" }
       return true
   } else {
       logger.info { "Greeting message for $name was not sent because it's not working hours" }
       return false
   }
}</code></pre><p>Самое важное здесь — вызов <em>clock.workingHours()</em>,<em> </em>это метод-расширение, позволяющий определить, рабочее сейчас время или нет:</p><pre><code>fun Clock.workingHours(): Boolean {
   val hour = this.instant().atZone(this.zone).hour
   return hour in 9..18
}</code></pre><p>Обратите внимание: в нашем примере уже определён и настроен bean clock (<em>ClockConfiguration</em>), который и используется в GreetingService для принятия решения — беспокоить пользователя или нет:</p><pre><code>@Bean
fun clock(): Clock {
   // here in order to reproduce the clock pitfall we create fixed clock with nighttime
   // however in real life we should use system default clock
   val nightTime = ZonedDateTime.now().withHour(2).withMinute(0).withSecond(0).withNano(0)
   return Clock.fixed(nightTime.toInstant(), ZoneId.systemDefault())
}</code></pre><p>При этом для воспроизводимости ловушки часы настроены всегда выдавать ночное время. В реальности можно столкнуться с ситуациями, когда компонента clock вовсе нет в контексте, либо он определён и настроен в соответствии с TZ, принятой на проекте, или же в UTC.</p><p><strong>Обход</strong></p><p>Настройка часов должна стать подготовкой работы тестового сценария: мы можем переопределить компонент clock для тестовой конфигурации и настроить его для нужд конкретного теста (<em>TestClockConfiguration.kt</em>):</p><pre><code>@Bean
@Primary
fun workingHoursClock(): Clock {
   val workingTime = ZonedDateTime.now().withHour(10).withMinute(0).withSecond(0).withNano(0)
   return Clock.fixed(workingTime.toInstant(), ZoneId.systemDefault())
}</code></pre><p>Здесь часы настроены выдавать всегда рабочее время. Нужно задействовать конфигурацию в тестах, и проблема решена:</p><pre><code>@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
@Testcontainers
@ActiveProfiles("test")
@Import(TestClockConfiguration::class)
class ClockPitfall</code></pre><figure class="full-width"><img alt="Схема обхода ловушки «Который час?!»" data-src="https://habrastorage.org/getpro/habr/upload_files/f24/d5f/5ea/f24d5f5ea409c60ae76c4cd24768132e.png" height="814" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/f24/d5f/5ea/f24d5f5ea409c60ae76c4cd24768132e.png" title="Схема обхода ловушки «Который час?!»" width="1026"/><div><figcaption>Схема обхода ловушки «Который час?!»</figcaption></div></figure><h3>Не дождались… (DidNotWaitPitfall.kt)  </h3><p><strong>Суть ловушки</strong>: в сервисе есть асинхронный обработчик, подписанный на события, поступающие из других сервисов системой через брокера сообщений (RMQ/Kafka). В интеграционных тестах мы проверяем обработчик, программно отправляя сообщения в брокер (как будто они поступили от внешнего сервиса). Так как обработчик событий асинхронный, мы не можем делать assertion сразу, нужно подождать.</p><p><strong>Как такое может случиться? </strong>Легко представить себе ситуацию, когда первоначально асинхронный обработчик успевает отработать даже в ситуации синхронного assertion-а в рамках теста (допустим, если проверке финального состояния предшествовали дополнительные действия), но позже перестал, и тесты стали падать/«моргать».</p><p><strong>Пример</strong></p><p>В проекте-примере есть сервис LoyaltyProgramEnteredHandler:</p><pre><code>@Service(EVENT_TYPE_LOYALTY_PROGRAM_ENTERED)
class LoyaltyProgramEnteredHandler(
   private val personService: PersonService
): EventHandler {

   private val logger = KotlinLogging.logger {}
   override fun handleEvent(event: Event) {
       val personId = event.personId
       val welcomeBonuses = personService.accrueWelcomeBonuses(personId = personId)
       logger.info { "Successfully handled event $event, added $welcomeBonuses" }
   }
}</code></pre><p>Вызывается он функциональным компонентом-consumer-ом:</p><pre><code>@Bean
fun processEvents() = Consumer&lt;Event&gt; {
   eventDispatcher.processEvent(event = it)
}</code></pre><p>Который, в свою очередь, принимает сообщения из topic-а Kafka (использована библиотека Spring Cloud Stream + binder для Kafka):</p><pre><code>cloud:
 function:
   definition: processEvents
 stream:
   bindings:
     processEvents-in-0:
       group: ${spring.application.name}
       destination: events</code></pre><p>В тестовой конфигурации также настроен дополнительный binding, который позволяет сообщения отправлять из сценария:</p><pre><code>...
spring:
 cloud:
   function:
     definition: processEvents
   stream:
     bindings:
       ...
       events-out-0:
         destination: events</code></pre><p>В самом тесте (DidNotWaiPitfall.waitingPitfall) мы проверяем побочный эффект от деятельности обработчика. </p><p>В начале сохраняем и приводим в нужный вид некие данные, проверяем начальное состояние поля, изменения которого ожидаем по результатам вызова обработчика:</p><pre><code>val creationResponse =
   restClient.post().uri("/persons").body(mapOf("name" to "John Doe")).retrieve().toEntity&lt;Person&gt;()
assertThat(creationResponse.statusCode).isEqualTo(HttpStatusCode.valueOf(200))
val createdId = creationResponse.body?.id ?: fail { "Created person ID could not be null" }

val modificationResponse =
   restClient.patch().uri("/persons/{createdId}", createdId).body(mapOf("status" to "CLIENT")).retrieve()
       .toEntity&lt;Person&gt;()
assertThat(modificationResponse.statusCode).isEqualTo(HttpStatusCode.valueOf(200))
assertThat(modificationResponse.body?.bonusBalance).isEqualTo(0)</code></pre><p>Далее отправляем сообщение (якобы от внешнего сервиса) в Kafka, используя binding, о котором я писал выше:</p><pre><code>fun sendEvent(eventType: String, userId: Long) {
   streamBridge.send("events-out-0", Event(personId = userId, type = eventType))</code></pre><p>После чего проверяем побочный эффект, вызывая GET API:</p><pre><code>val resultingPerson = restClient.get().uri("/persons/{createdId}", createdId).retrieve().toEntity&lt;Person&gt;()
assertThat(resultingPerson.body?.bonusBalance).isEqualTo(100)</code></pre><p>В результате тест наш падает со следующей ошибкой:</p><pre><code>Expected :100L
Actual   :0L

org.opentest4j.AssertionFailedError: 
expected: 100L
 but was: 0L</code></pre><p><strong>Обход</strong></p><p>Один из способов выхода из этой ситуации — не получив с первого раза желаемый результат в рамках assertion-а, просто подождать, а потом повторить попытку, пока исход проверки не будет устраивать.</p><p>Для этого не нужно писать много boilerplate-кода, достаточно задействовать библиотеку вроде awaitility:</p><pre><code>await untilAsserted {
           val resultingPerson = restClient.get().uri("/persons/{createdId}", createdId).retrieve().toEntity&lt;Person&gt;()
           assertThat(resultingPerson.body?.bonusBalance).isEqualTo(100)
}</code></pre><p>Здесь с довольно разумными значениями по умолчанию повторяется проверка данных, возвращаемых GET API до «позеленения» условия, или же истечения тайм-аута.</p><figure class="full-width"><img alt="Схема обхода ловушки «Не дождались»" data-src="https://habrastorage.org/getpro/habr/upload_files/e4d/8f7/c4e/e4d8f7c4eb5fb18580a2a0996a31156a.png" height="816" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/e4d/8f7/c4e/e4d8f7c4eb5fb18580a2a0996a31156a.png" title="Схема обхода ловушки «Не дождались»" width="1012"/><div><figcaption>Схема обхода ловушки «Не дождались»</figcaption></div></figure><h3>Непредсказуемый компонент (UnpredictablePitfall.kt)</h3><p><strong>Суть ловушки</strong>: в сервисе есть компонент, генерирующий непредсказуемые значения, в тесте же хочется его поведение предопределить. В каком-то смысле предыдущий пример с часами также можно отнести к этой категории, но здесь для обхода будет использован иной инструментарий, поэтому выделил отдельно.</p><p><strong>Как такое может случиться? </strong>Возможно, в результате эволюции теста возникла необходимость проверять поле, связанное напрямую с «непредсказуемым».</p><p><strong>Пример</strong></p><p>В integration-testing-pitfalls есть функциональность подтверждения контакта пользователя:</p><pre><code>@Transactional
fun confirmEmail(personId: Long, email: String): EmailInformation {
   val foundPerson = personEntityRepository.findByIdOrNull(id = personId) ?: throw IllegalInputDataException("No person with ID $personId found")
   return foundPerson.emails.getOrElse(email) {
       val confirmationId = confirmationIdGenerator.generateConfirmationId()
       val emailInformation = EmailInformation(
           email = email,
           confirmationId = confirmationId,
           isVerified = false
       )
       foundPerson.emails[email] = emailInformation
       // We will skip the confirmation logic for now
       return emailInformation
   }
}</code></pre><p>Здесь для нас интерес представляет генерация confirmation ID:</p><pre><code>fun generateConfirmationId() = UUID.randomUUID().toString()</code></pre><p>В тесте контроллера мы хотим проверить в том числе поле confirmationCode, что невозможно без переопределения поведения генератора:</p><pre><code>@Test
fun testUnpredictable() {
       // given
       val creationResponse =
           restClient.post().uri("/persons").body(mapOf("name" to "John Doe")).retrieve().toEntity&lt;Person&gt;()
       Assertions.assertThat(creationResponse.statusCode).isEqualTo(HttpStatusCode.valueOf(200))
       val createdId = creationResponse.body?.id ?: fail { "Created person ID could not be null" }
       val email = "john@domain.com"
       val wantedConfirmationId = "CONFIRMATION_ID"

       // when
       val emailResponse =
           restClient.post().uri("/persons/{createdId}/email", createdId).body(mapOf("email" to email)).retrieve()
               .toEntity&lt;EmailInfo&gt;()


       // then
       Assertions.assertThat(emailResponse.body?.isVerified).isEqualTo(false)
       Assertions.assertThat(emailResponse.body?.email).isEqualTo(email)
       Assertions.assertThat(emailResponse.body?.confirmationCode).isEqualTo(wantedConfirmationId)
}</code></pre><p>В отличие от примера с часами в этот раз воспользуемся возможностью тестовой библиотеки и определим в контексте bean, воспользовавшись следующей конструкцией:</p><pre><code>@MockkBean
private lateinit var confirmationIdGenerator: ConfirmationIdGenerator</code></pre><p>Плюсом такого подхода является возможность использовать всю мощь mock-библиотеки для динамического переопределения поведения нашего компонента:</p><pre><code>every { confirmationIdGenerator.generateConfirmationId() } returns wantedConfirmationId</code></pre><figure class="full-width"><img alt="Схема обхода ловушки «Непредсказуемый компонент»" data-src="https://habrastorage.org/getpro/habr/upload_files/993/186/07b/99318607bdb51b94f94f9226a6f101ed.png" height="788" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/993/186/07b/99318607bdb51b94f94f9226a6f101ed.png" title="Схема обхода ловушки «Непредсказуемый компонент»" width="1006"/><div><figcaption>Схема обхода ловушки «Непредсказуемый компонент»</figcaption></div></figure><h2>Выводы</h2><p>На каждом уровне пирамиды тестирования необходимо использовать подходящие и доступные технологии и инструменты автоматизации, а также придерживаться лучших практик индустрии. Только такой комплексный подход обеспечивает достижение высокого качества и создание надёжной основы для развития проекта. При проведении интеграционного тестирования на пути разработчика могут встать сложности-ловушки, о которых я и рассказал вам в этой статье. Ниже привожу таблицу с кратким описанием ловушек и способов их обхода:</p><div><div class="table"><table><tbody><tr><td><p align="left"><strong>Ловушка</strong></p></td><td><p align="left"><strong>Суть</strong></p></td><td><p align="left"><strong>Как обходить</strong></p></td><td><p align="left"><strong>Инструменты</strong></p></td></tr><tr><td><p align="left">Грязная база</p></td><td><p align="left">Несколько тестов проверяют функции сервиса, относящиеся к работе с состоянием, при этом по результатам выполнения тестов состояние не очищается</p></td><td><p align="left">Использовать механизмы тестового фреймворка для очистки состояния перед выполнением теста</p></td><td><p align="left">@BeforeEach</p></td></tr><tr><td><p align="left">Нежданный планировщик</p></td><td><p align="left">Тесты через API взаимодействуют с конкретной сущностью, при этом в процесс вклинивается планировщик и меняет атрибуты сущности, а то и вовсе её удаляет, из-за чего тесты падают</p></td><td><p align="left">Разделять тестирования планировщика и основной функциональности сервиса: добавить в сервис возможность отключать планировщик на уровне конфигурации, саму же работу планировщика тестировать отдельно, вызывая его явно</p></td><td><p align="left">@ActiveProfiles("test")  </p></td></tr><tr><td><p align="left">Который час?!</p></td><td><p align="left">Тесты проверяют API, реализация которого содержит алгоритм, зависящий от текущего времени/даты</p></td><td><p align="left">Переопределить компонент, представляющий часы, и настроить его работу, обеспечив предсказуемость тестов</p></td><td><p align="left">@TestConfiguration</p></td></tr><tr><td><p align="left">Не дождались…</p></td><td><p align="left">Есть асинхронный обработчик, мы результаты его работы пытаемся проверить в тесте, не зная точно, завершился его вызов или нет</p></td><td><p align="left">Используя декларативные средства, организовать петлю ожидания с тайм-аутом</p></td><td><p align="left">testImplementation("org.awaitility:awaitility-kotlin:4.2.1")</p></td></tr><tr><td><p align="left">Непредсказуемый компонент</p></td><td><p align="left">В системе есть компонент (например, генератор случайных чисел), результат работы которого хотелось бы проверять, меняя его поведение динамически в разных тестах</p></td><td><p align="left">Использовать mock-библиотеку для помещения в контекст компонента, позволяющего через API динамически изменять поведение</p></td><td><p align="left">@MockkBean</p></td></tr></tbody></table></div></div><h2>Что ещё почитать/посмотреть по теме </h2><ul><li><p>Книга <a href="https://www.oreilly.com/library/view/continuous-integration-improving/9780321336385/"><u>Continuous Integration: Improving Software Quality and Reducing Risk</u></a></p></li><li><p>Статья <a href="https://www.baeldung.com/spring-boot-testing-pitfalls"><u>Pitfalls on Testing with Spring</u></a></p></li><li><p>Статья <a href="https://habr.com/ru/articles/672484/"><u>Подробнее про пирамиду тестирования</u></a></p></li></ul><p>Надеюсь, информация была полезной и интересной. Приглашаю вас в комментарии — обсудим непростые ситуации с интеграционными тестами. Спасибо за вашу поддержку!  </p><p></p></div></div></div><!-- --><!-- --></div><!-- --><!-- --></div><!--]--><!-- --><div class="tm-article-presenter__meta" data-test-id="article-meta-links"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[spring-boot]"><span>spring-boot</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%B8%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D0%BE%D0%B5+%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5]"><span>интеграционное тестирование</span></a><!--]--></li><!--]--><!-- --></ul></div><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/companies/cian/articles/"><!--[--><span>Блог компании Циан</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/hubs/kotlin/"><!--[--><span>Kotlin</span><!--]--></a><!--]--></li><!--]--><!-- --></ul></div></div><!-- --><!--]--></article><!--]--></div><!-- --></div><div class="tm-article-sticky-panel" data-test-id="article-sticky-panel" style=""><div class="tm-data-icons tm-data-icons tm-data-icons_space-big tm-article-sticky-panel__icons" data-test-id="article-stats-icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article" height="24" width="24"><title>Всего голосов 12: ↑11 и ↓1</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-rating"></use></svg><span class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating tm-votes-meter__value" data-test-id="votes-meter-value" title="Всего голосов 12: ↑11 и ↓1">+12</span></div><!--teleport start--><!--teleport end--><!-- --></div><!-- --><!-- --><button class="bookmarks-button tm-data-icons__item" title="Добавить в закладки" type="button"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Добавить в закладки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-favorite"></use></svg></span><span class="bookmarks-button__counter" title="Количество пользователей, добавивших публикацию в закладки">41</span></button><div class="tm-sharing tm-data-icons__item" title="Поделиться"><button class="tm-sharing__button" type="button"><svg class="tm-sharing__icon" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z" fill="currentColor"></path></svg></button><!--teleport start--><!--teleport end--></div><div class="tm-article-comments-counter-link tm-data-icons__item" title="Читать комментарии"><a class="tm-article-comments-counter-link__link" data-test-id="counter-comments" href="/ru/companies/cian/articles/802673/comments/"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value">6</span><!--]--></a><!-- --></div><!--[--><!--[--><!--[--><!-- --><!--]--><!--]--><!--]--><!--teleport start--><!--teleport end--><!-- --></div></div></div><!--[--><!--]--><div class="tm-article-presenter__footer"><!--[--><!--[--><div class="tm-article-blocks"><!-- --><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><!-- --><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><!--[--><div class="tm-article-author" data-test-id="article-author-info"><!--[--><!--[--><div class="tm-article-author__company"><div class="tm-article-author__company-card"><div class="tm-company-snippet"><a class="tm-company-snippet__logo-link" href="/ru/companies/cian/profile/"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="40" src="//habrastorage.org/getpro/habr/company/27c/b0e/f98/27cb0ef980f904c9c6b3babbba85903b.jpg" width="40"/></div></a><div class="tm-company-snippet__info"><a class="tm-company-snippet__title" data-test-id="company-title" href="/ru/companies/cian/profile/"><span>Циан</span></a><div class="tm-company-snippet__description">В топ-5 лучших ИТ-компаний рейтинга Хабр.Карьера</div></div></div><div class="tm-article-author__buttons"><!-- --><!-- --></div></div><div class="tm-article-author__company-contacts"><!--[--><a class="tm-article-author__contact" href="https://team.cian.tech/" rel="noopener" target="_blank">Сайт</a><a class="tm-article-author__contact" href="https://career.habr.com/companies/cian" rel="noopener" target="_blank">Хабр Карьера</a><a class="tm-article-author__contact" href="https://vk.com/cian_official" rel="noopener" target="_blank">ВКонтакте</a><!--]--></div><div class="tm-article-author__separator"></div></div><!--]--><!--]--><div class="tm-user-card tm-user-card tm-user-card_variant-article tm-article-author__user-card" data-async-called="true"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a class="tm-user-card__userpic tm-user-card__userpic_size-40" href="/ru/users/a_tanoshkin/"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" src="//habrastorage.org/getpro/habr/avatars/0f0/2ff/d43/0f02ffd43ad42af4d232bf5b44769051.png"/></div></a><div class="tm-user-card__meta"><div class="tm-counter-container tm-karma tm-karma" title=" 5 голосов "><div class="tm-counter-container__header"><!--[--><div class="karma-display positive" data-v-7635202e="">5</div><!-- --><!--]--></div><div class="tm-counter-container__footer"><!--[--><div class="tm-karma__text">Карма</div><!--teleport start--><!--teleport end--><!--]--></div></div><div class="tm-counter-container" title="Рейтинг пользователя"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!-- --><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">0</span></span><!--]--></div><!-- --></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div></div></div></div><div class="tm-user-card__info tm-user-card__info_variant-article tm-user-card__info"><div class="tm-user-card__title tm-user-card__title_variant-article tm-user-card__title"><!-- --><a class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article" href="/ru/users/a_tanoshkin/"> @a_tanoshkin</a><!-- --></div><p class="tm-user-card__short-info tm-user-card__short-info_variant-article tm-user-card__short-info" data-test-id="user-card-speciality">Пользователь</p></div></div><div class="tm-user-card__buttons tm-user-card__buttons_variant-article tm-user-card__buttons"><!-- --><div class="tm-user-card__button"><div class="tm-button-follow tm-user-card__button-follow"><!-- --><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div></div><!-- --><div class="tm-user-card__button tm-user-card__button_write" data-test-id="user-card-conversations"><svg class="tm-svg-img tm-user-card__button-icon" height="16" width="16"><title>Отправить сообщение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#mail"></use></svg></div><!-- --></div><!-- --></div><!-- --></div><!--]--></div><!--]--><!-- --></section><!-- --><!--[--><div class="banner-wrapper leaderboard tm-company-article__banner" data-v-ad758baa="" style="--467224fc:200px;--58ff5eba:auto;"><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa=""><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="adfox-banner-placeholder leaderboard" data-v-12f7bcca=""><div class="image loads" data-v-12f7bcca=""></div><div class="lines" data-v-12f7bcca=""><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div></div></div><!-- --></div><div class="tm-adfox-banner" data-v-ad758baa="" id="adfox_164725660339535756"></div><!--]--></div><!-- --><!--]--><!--]--><div class="tm-article-blocks__comments"><div class="tm-article-page-comments" id="publication-comments"><div><!--[--><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style" data-test-id="counter-comments" href="/ru/companies/cian/articles/802673/comments/"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted"> Комментарии 6 </span><!--]--></a><!-- --></div><!--]--></div></div></div><!--[--><!--[--><!--]--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2><!--[--><!--]--></div><!-- --></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><!--[--><!--[--><div class="tm-tabs tm-tabs"><div class=""><!--[--><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim tm-tabs__tab-link">Лучшие за сутки</button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_slim tm-tabs__tab-link">Похожие</button></span><!--]--></div><!-- --></div><div class="similar-and-daily__tab-view"><div class="placeholder-wrapper"><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="tm-placeholder-article-cards"><!--[--><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><!--]--></div><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --></div><!-- --></div><!--]--><!--]--></div><!--]--><!-- --></section><!--[--><!--[--><div><div class="placeholder-wrapper"><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="tm-placeholder-promo"><div class="tm-placeholder-promo__header"><div class="tm-placeholder__line tm-placeholder__line_promo-title"></div></div><div class="tm-placeholder-promo__body"><div class="tm-placeholder-promo__posts"><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div></div><div class="tm-placeholder-promo__dots"><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div></div></div></div><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --></div></div><div class="placeholder-wrapper"><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="tm-placeholder-inset tm-placeholder-vacancies"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div><div class="tm-placeholder-inset__body"><ul class="tm-placeholder-list"><!--[--><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><!--]--></ul></div><div class="tm-placeholder-inset__footer"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --></div><!--]--><!--]--><!-- --><!--[--><!--]--><!--]--></div><!--]--><!--]--></div></div><!--]--><!--]--></div></div><div class="tm-page__sidebar"><!--[--><div class="tm-layout-sidebar"><div class="tm-layout-sidebar__placeholder_initial"></div><div class="tm-sexy-sidebar_initial tm-sexy-sidebar" style="margin-top:0px;"><!--[--><!--]--><!-- --><div class="tm-layout-sidebar__ads_initial tm-layout-sidebar__ads"><div class="banner-wrapper half-page tm-layout-sidebar__banner tm-layout-sidebar__banner_top" data-v-ad758baa="" style="--467224fc:600px;--58ff5eba:auto;"><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa=""><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="adfox-banner-placeholder half-page" data-v-12f7bcca=""><div class="image loads" data-v-12f7bcca=""></div><div class="lines" data-v-12f7bcca=""><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div></div></div><!-- --></div><div class="tm-adfox-banner" data-v-ad758baa="" id="adfox_164725680533065327"></div><!--]--></div></div><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Информация</h2><!--[--><!--]--></div><!-- --></header><!--[--><div class="tm-block__body tm-block__body"><!--[--><div class="tm-company-basic-info"><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Сайт</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[--><a class="tm-company-basic-info__link" href="https://www.cian.ru/" target="_blank">www.cian.ru</a><!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Дата регистрации</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[--><time datetime="2019-07-15T14:53:03.000Z" title="2019-07-15, 17:53">15  июля  2019</time><!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Дата основания</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[--><time datetime="2001-09-20T20:00:00.000Z" title="2001-09-21, 00:00">21  сентября  2001</time><!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Численность</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[-->1 001–5 000 человек<!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Местоположение</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[-->Россия<!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Представитель</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[--><a class="tm-company-basic-info__link" href="/ru/users/bezzabotnova/">Zina Bezzabotnova</a><!--]--></dd></dl></div><!--]--></div><!--]--><!-- --></section><div class="tm-company-widgets"><!--[--><!--]--></div><!-- --><section class="tm-block tm-block tm-block_spacing-around tm-stories-block" data-async-called="true" data-navigatable="" tabindex="0"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Истории</h2><!--[--><!--]--></div><!-- --></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-equal"><!--[--><div class="tm-stories-empty"><!--[--><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><!--]--></div><!-- --><!--]--></div><!--]--><!-- --></section><!--]--><div class="banner-wrapper medium-rectangle tm-layout-sidebar__banner tm-layout-sidebar__banner_bottom" data-v-ad758baa="" style="--467224fc:250px;--58ff5eba:auto;"><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa=""><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="adfox-banner-placeholder medium-rectangle" data-v-12f7bcca=""><div class="image loads" data-v-12f7bcca=""></div><div class="lines" data-v-12f7bcca=""><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div></div></div><!-- --></div><div class="tm-adfox-banner" data-v-ad758baa="" id="adfox_164725691003361602"></div><!--]--></div></div></div><!--]--></div></div><!-- --><!--]--></div></div></main><!-- --></div><div class="tm-footer-menu"><div class="tm-page-width"><!--[--><div class="tm-footer-menu__container"><!--[--><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Ваш аккаунт</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr/?back=/ru/companies/cian/articles/802673/&amp;hl=ru" rel="nofollow" target="_self">Войти</a></li><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr-register/?back=/ru/companies/cian/articles/802673/&amp;hl=ru" rel="nofollow" target="_self">Регистрация</a></li><!--]--></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Разделы</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/articles/">Статьи</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/news/">Новости</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/hubs/">Хабы</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/companies/">Компании</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/users/">Авторы</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/sandbox/">Песочница</a></li><!--]--></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Информация</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/help/">Устройство сайта</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/authors/codex/">Для авторов</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/companies/corpblogs/">Для компаний</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/docs/transparency/">Документы</a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/agreement/?hl=ru_RU" target="_blank">Соглашение</a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/confidential/?hl=ru_RU" target="_blank">Конфиденциальность</a></li><!--]--></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Услуги</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/corporate-blogs/" target="_blank">Корпоративный блог</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/advertising/" target="_blank">Медийная реклама</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/native-special/" target="_blank">Нативные проекты</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/education-programs/" target="_blank">Образовательные программы</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/hello-startup/" target="_blank">Стартапам</a></li><!--]--></ul></div></div><!--]--></div><!--]--></div></div><div class="tm-footer"><div class="tm-page-width"><!--[--><div class="tm-footer__container"><!-- --><div class="tm-footer__social"><!--[--><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Facebook</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Twitter</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>VK</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-vk"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Telegram</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Youtube</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://dzen.ru/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Яндекс Дзен</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-dzen"></use></svg></a><!--]--></div><!--teleport start--><!--teleport end--><button class="tm-footer__link"><!-- --> Настройка языка</button><a class="tm-footer__link" href="/ru/feedback/">Техническая поддержка</a><div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2025, </span><span class="tm-copyright__name"><a class="tm-copyright__link" href="https://company.habr.com/" rel="noopener" target="_blank">Habr</a></span></span></div></div><!--]--></div></div><!-- --><!--]--></div><!-- --></div></div>
<div id="overlays"><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--></div>
</body>
</html>
