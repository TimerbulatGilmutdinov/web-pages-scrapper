<!DOCTYPE html>

<html lang="ru">
<head>
<title>Не играй в догонялки со Spring — Explyt Spring plugin для IDEA Community / Хабр</title>
</head>
<body>
<div id="mount"><div data-async-called="true" id="app"><div class="tm-layout__wrapper"><!--[--><!-- --><div></div><!-- --><header class="tm-header" data-test-id="header"><div class="tm-page-width"><!--[--><div class="tm-header__container"><!-- --><span class="tm-header__logo-wrap"><a class="tm-header__logo tm-header__logo_hl-ru tm-header__logo" href="/ru/"><svg class="tm-svg-img tm-header__icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a><span class="tm-header__beta-sign" style="display:none;">β</span></span><!--[--><div class="tm-dropdown tm-header__projects"><div class="tm-dropdown__head"><!--[--><button class="tm-header__dropdown-toggle"><svg class="tm-svg-img tm-header__icon tm-header__icon_dropdown" height="16" width="16"><title>Открыть список</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#arrow-down"></use></svg></button><!--]--></div><!-- --></div><a class="tm-header__become-author-btn" href="/ru/sandbox/start/">Как стать автором</a><div class="tm-feature tm-feature tm-feature_variant-inline tm-header__feature"><!-- --></div><!-- --><!--]--><!-- --></div><!--]--></div></header><div class="tm-layout"><div class="tm-page-progress-bar"></div><div class="tm-base-layout__header_is-sticky tm-base-layout__header" data-menu-sticky="true"><div class="tm-page-width"><!--[--><div class="tm-base-layout__header-wrapper"><div class="tm-main-menu"><div class="tm-main-menu__section"><nav class="tm-main-menu__section-content"><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/feed/">Моя лента</a><!--]--><!--[--><a class="tm-main-menu__item" href="/ru/articles/">Все потоки</a><!--]--><!--[--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/develop/">Разработка</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/admin/">Администрирование</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/design/">Дизайн</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/management/">Менеджмент</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/marketing/">Маркетинг</a><!--]--><!--[--><a class="tm-main-menu__item" data-test-id="main-menu-item" href="/ru/flows/popsci/">Научпоп</a><!--]--><!--]--></nav></div></div><div class="tm-header-user-menu tm-base-layout__user-menu"><a class="tm-header-user-menu__item tm-header-user-menu__search" data-test-id="search-button" href="/ru/search/"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search tm-header-user-menu__icon_dark" height="24" width="24"><title>Поиск</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#search"></use></svg></a><!-- --><!-- --><div class="tm-header-user-menu__item tm-header-user-menu__write"><div><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_write tm-header-user-menu__icon_dark" height="24" width="24"><title>Написать публикацию</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#write"></use></svg></div><!-- --></div><!--[--><div class="tm-header-user-menu__item"><button class="tm-header-user-menu__toggle" data-test-id="user-menu-settings"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_dark" height="24" width="24"><title>Настройки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#page-settings"></use></svg></button></div><a class="tm-header-user-menu__item" href="https://habr.com/kek/v1/auth/habrahabr/?back=/ru/companies/explyt/articles/854304/&amp;hl=ru" rel="nofollow"><!--[--><button class="btn btn_solid btn_small tm-header-user-menu__login" type="button"><!--[-->Войти<!--]--></button><!--]--></a><!--]--><!-- --><!--teleport start--><!--teleport end--><!-- --></div></div><!--]--></div></div><!-- --><div class="tm-page-width"><!--[--><!--]--></div><main class="tm-layout__container"><div class="tm-page" companyname="explyt" data-async-called="true" hl="ru" style="--0c809c5a:16px;--a086013e:100%;--7c457026:0;"><div class="tm-page-width"><!--[--><div class="tm-page__header"><!--[--><!--]--></div><div class="tm-page__wrapper"><div class="tm-page__main_has-sidebar tm-page__main"><div class="pull-down"><!-- --><div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg class="tm-svg-img pull-down__icon pull-down__arrow" height="24" width="24"><title>Обновить</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#pull-arrow"></use></svg></div></div><!--[--><!--[--><div class="tm-article-presenter"><!--[--><!--[--><!-- --><div class="tm-company-profile-card tm-company-article__profile-card"><div class="tm-company-card tm-company-profile-card__info"><div class="tm-company-card__header"><a class="tm-company-card__avatar" href="/ru/companies/explyt/profile/"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="48" src="//habrastorage.org/getpro/habr/company/aa8/133/9ba/aa81339bac33487348a933529ffbfc79.png" width="48"/></div></a><!--[--><!-- --><div class="tm-counter-container tm-company-card__rating"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!-- --><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">53.53</span></span><!--]--></div><!-- --></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div><!-- --><!--]--></div><div class="tm-company-card__info"><a class="tm-company-card__name" href="/ru/companies/explyt/profile/"><span>Explyt</span></a><!-- --></div></div><div class="tm-company-profile-card__buttons"><div class="tm-button-follow tm-company-profile-card__button tm-company-profile-card__button_follow"><!-- --><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div><!-- --><!-- --><!-- --></div></div><!-- --><!--]--><!--]--><div class="tm-article-presenter__body" data-test-id="article-body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><!--[--><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><!--[--><div class="tm-article-presenter__header"><!--[--><!--]--><div class="tm-article-snippet tm-article-snippet tm-article-presenter__snippet"><!--[--><!--]--><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a class="tm-user-info__userpic" data-test-id="user-info-pic" href="/ru/users/grisha9/" title="grisha9"><div class="tm-entity-image"><!--[--><img alt="" class="tm-entity-image__pic" height="24" src="https://assets.habr.com/habr-web/img/avatars/096.png" width="24"/><!--]--></div></a><span class="tm-user-info__user tm-user-info__user_appearance-default" data-test-id="user-info-description"><a class="tm-user-info__username" href="/ru/users/grisha9/">grisha9 <!-- --></a><!--[--><span class="tm-article-datetime-published"><time datetime="2024-10-29T17:12:48.000Z" title="2024-10-29, 20:12">29  окт  2024 в 20:12</time></span><!--]--></span></span></div><!-- --></div><h1 class="tm-title tm-title_h1" data-test-id="articleTitle" lang="ru"><span>Не играй в догонялки со Spring — Explyt Spring plugin для IDEA Community</span></h1><div class="tm-article-snippet__stats" data-test-id="articleStats"><div class="tm-article-complexity tm-article-complexity_complexity-low"><span class="tm-svg-icon__wrapper tm-article-complexity__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Уровень сложности</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#complexity-low"></use></svg></span><span class="tm-article-complexity__label">Простой</span></div><div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Время на прочтение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#clock"></use></svg></span><span class="tm-article-reading-time__label">14 мин</span></div><span class="tm-icon-counter tm-data-icons__item"><svg class="tm-svg-img tm-icon-counter__icon" height="24" width="24"><title>Количество просмотров</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-views"></use></svg><span class="tm-icon-counter__value" title="5917">5.9K</span></span></div><div class="tm-publication-hubs__container" data-test-id="articleHubsList"><div class="tm-publication-hubs"><!--[--><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/companies/explyt/articles/"><!--[--><span>Блог компании Explyt</span><!-- --><!--]--></a></span><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/hubs/java/"><!--[--><span>Java</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/hubs/kotlin/"><!--[--><span>Kotlin</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/hubs/txt_ide/"><!--[--><span>Текстовые редакторы и IDE</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a class="tm-publication-hub__link" href="/ru/hubs/programming/"><!--[--><span>Программирование</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><!--]--></div></div><div class="tm-article-labels" data-test-id="articleLabels"><div class="tm-article-labels__container"><div class="tm-publication-label tm-publication-label_variant-case"><span>Кейс</span></div><!--[--><div class="tm-publication-label tm-publication-label_variant-technotext2024"><a class="" href="/ru/technotext/2024/">✏️ Технотекст 7</a></div><!--]--></div></div><!-- --><!-- --></div></div><!--[--><!-- --><div class="tm-article-body" data-gallery-root="" lang="ru"><div><!--[--><!--]--></div><div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><h3>Введение</h3><p>Всем привет. После моей предыдущей <a href="https://habr.com/ru/articles/753828/">статьи</a> о Maven-плагине, где я предложил новый подход к реализации и создал свою <a href="https://plugins.jetbrains.com/plugin/22370-gmaven/">версию</a> для IDEA (вместо того чтобы писать свой мини-Maven, я делегировал всю основную работу ему посредством Maven плагина), меня пригласили работать над <a href="https://explyt.com/?utm_source=habr&amp;utm_campaign=post_1">Spring плагином</a> в IT-стартап Explyt. Компания занимается автоматической генерацией тестов на базе AI и формальных методов. В процессе работы столкнулся с проблемами, похожими на те, которые решал в своем Maven плагине. У меня возникло некое дежавю, и я подумал: почему бы не использовать подобный подход, чтобы доработать и улучшить Dependency Injection Explyt Spring плагина? Текст для тех, кто работает со Spring-плагинами и хочет разобраться, как эффективно применять готовую логику Спринга для новых задач. Заходите под кат, расскажу более подробно про наш плагин, проблемы которые решал и поделюсь некоторыми примерами кода.</p><h3>Проблема</h3><p>Одна из первоочередных и основных задач Spring плагина - это поддержка Dependency Injection, а именно надо уметь понимать, является ли класс частью контекста. Помимо общей подсветки бинов и навигации по ним (декларация/использование), это также часто необходимо при создании инспекций, «комплишенов» кода и пр. Какие тут могут быть проблемы? </p><p>Давайте рассмотрим на примерах. Во-первых, нужно определить основные пакеты приложения, откуда начинается поиск бинов. И если используется строка, то все вроде бы и ничего.</p><pre><code class="java">@SpringBootApplication(scanBasePackages = "com.example.simple")
public class DemoApplication { 
}</code></pre><p>А если у нас там какое-то нестандартное выражение или какая-нибудь регулярка, которую надо вычислить? Кроме того, аннотация @ComponentScan позволяет создавать очень сложные фильтры для пакетов с возможностью частичного исключения и прочее.</p><pre><code class="java">@SpringBootApplication(scanBasePackages = "com.*.spel")
public class DemoApplicationSpel {    
}</code></pre><p>А это совсем непростая задача.</p><p>С аннотацией @<a href="https://docs.spring.io/spring-data/jpa/docs/current/api/org/springframework/data/jpa/repository/config/EnableJpaRepositories.html">EnableJpaRepositories</a> и аналогичными ей похожая проблема. Начиная от простых случаев, где доступность репозиториев включается строкой с названием пакета, до сложных выражений с кастомной логикой.</p><p>Кроме того, на то находится бин в контексте или нет, также влияют аннотации @Conditional/@DependOn/@Profile и многие другие. А если у нас аннотация @Conditional с пользовательским кодом, то это равносильно - миссия невыполнима. </p><pre><code class="java">@SpringBootApplication
public class DemoApplicationConditional {
    @Autowired ConditionalBean bean;

    public static void main(String[] args) {
        SpringApplication.run(DemoApplicationConditional.class, args);
    }
}


@Conditional(MyCondition.class)
@Component
class ConditionalBean {}

class MyCondition implements Condition {
    @Override
    public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) {
        //some user logic
        return false;
    }
}</code></pre><p>Чтобы вычислить такое выражение, нам надо скомпилировать код со всеми зависимостями и выполнить его. Обладая на входе только данными о код-модели, сделать это на основе ее анализа практически невозможно. Это не работает даже в IDEA Ultimate (все сравнения с Ultimate версии 2022.2, когда это еще было можно)</p><p>Такие примеры можно приводить очень долго. По факту мы не можем поддержать все возможные случаи. А действуем по закону Парето, что 20% усилий дают 80% результата. Такой подход уже использовался на момент моего прихода в команду, когда все реализовывалось на основе анализа когда, это самый типовой подход и он применяется так или иначе во всех спринг плагинах, в том числе Spring Ultimate.</p><p>Поддержать все cлучаи это, по сути, написать свой спринг, только вместо java-рантайма с *.class файлами у нас в данном случае <a href="https://plugins.jetbrains.com/docs/intellij/psi.html">модель кода идеи</a>. А это очень трудоемкая задача и чтобы поддержать все эти возможности не хватит и жизни. Фактически пишем свой спринг на минималках.</p><p>В процессе работы у меня в голове постоянно витала мысль: почему бы не попробовать переиспользовать готовую логику из спринга по нахождению бинов, а не писать ее самому. Играя в догонялки со Spring, всегда оказываешься в роли отстающих. Так как один к одному воспроизвести ее практически не реально и на это уходит слишком много ресурсов. Да и находимся мы в разных условиях. У них на входе полноценный java runtime, у нас модель кода — исходники. Так что ошибки и неточности в воспроизведении логики спринга неизбежны. То есть это ровно тоже самое что я и пытался исправить в своем IDEA Maven плагине. Посмотрим, что из этого вышло.</p><h3>Идея</h3><p>Как известно, процесс инициализации контекста Spring, если очень грубо, состоит из двух основных шагов:</p><ul><li><p>построение метаданных — bean definition</p></li><li><p>создание bean instances — непосредственно экземпляров класса</p></li></ul><p>Более подробно про это можно почитать <a href="https://habr.com/ru/companies/otus/articles/501930/">тут</a> и <a href="https://habr.com/ru/articles/222579/">тут</a>.</p><p>Bean definition – это специальная структура спринга, которая представляет метаданные о бинах. К этим метаданным уже применены все возможные фильтры: @Conditional/@DependOn/@Profile и др. На следующем этапе по ним создаются непосредственно экземпляры бинов и происходит дополнительная валидация - есть ли нужный бин в контексте и прочее.</p><p>То есть после первого шага у нас уже есть все нужные данные о доступных бинах. Идея была следующая: нам надо как-то вклиниться в этот процесс поднятия контекста и прервать его после первого шага. </p><p>Выполнять инициализацию/создание бинов нам не надо, тут могут уже начать выполняться скрипты миграции БД (liquibase/flyway), @PostConstruct методы, запуск веб-сервера. Это может привести к множеству нежелательных «сайд» эффектов (изменение БД или порт может быть занят, если приложение уже запущено в фоне). Да и к тому же именно процесс создания бинов занимает большую часть времени старта приложения.</p><p>Небольшое уточнение: далее речь пойдет только о Spring Boot проектах, так как для них легко находятся входные точки запуска проекта, и по все по тому же закону Парето, это покрывает большую часть текущих случаев.</p><h3>Реализация</h3><p>Вот <a href="https://github.com/spring-projects/spring-framework/blob/6.0.x/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java#L578">так</a> выглядит основная часть создания контекста в абстрактном классе <a href="https://docs.spring.io/spring-framework/docs/5.0.0.RELEASE/javadoc-api/org/springframework/context/support/AbstractApplicationContext.html">AbstractApplicationContext</a>, от которого наследуются все остальные контексты приложений(ServletWebServerApplicationContext, ReactiveWebServerApplicationContext и др.)</p><pre><code class="java">public void refresh() throws BeansException, IllegalStateException {
    synchronized (this.startupShutdownMonitor) {
        StartupStep contextRefresh = this.applicationStartup.start("spring.context.refresh");

        // Prepare this context for refreshing.
        prepareRefresh();
        // Tell the subclass to refresh the internal bean factory.
        ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();
        // Prepare the bean factory for use in this context.
        prepareBeanFactory(beanFactory);

        try {
            // Allows post-processing of the bean factory in context subclasses.
            postProcessBeanFactory(beanFactory);

            StartupStep beanPostProcess = this.applicationStartup.start("spring.context.beans.post-process");
            // Invoke factory processors registered as beans in the context.
            invokeBeanFactoryPostProcessors(beanFactory);

            // Register bean processors that intercept bean creation.
            registerBeanPostProcessors(beanFactory);
            beanPostProcess.end();

            // Initialize message source for this context.
            initMessageSource();
            // Initialize event multicaster for this context.
            initApplicationEventMulticaster();
            // Initialize other special beans in specific context subclasses.
            onRefresh();
            // Check for listener beans and register them.
            registerListeners();

            // Instantiate all remaining (non-lazy-init) singletons.
            finishBeanFactoryInitialization(beanFactory);
            // Last step: publish corresponding event.
            finishRefresh();
        } catch (BeansException ex) {
            ....
        }
    }
}</code></pre><p>На строке <abbr class="habraabbr" data-abbr="beanPostProcess.end()" data-title="&lt;p&gt;&lt;/p&gt;" title="">beanPostProcess.end()</abbr> завершается процесс построения метаданных, и нам надо как-то прервать этот процесс после этого шага. </p><p>Первое, что пришло в голову — это написать свой BeanFactoryPostProcessor и кинуть в нем Exception. Но тут загвоздка в том, что его надо регистрировать как бин в приложении и положить в пакет, который будет просканирован @PackageScan, который мы заранее не знаем и настраивать порядок его выполнения, чтобы он был последним. В целом, это все решаемо, но мне этот вариант показался наименее перспективным, тем более, в голове уже были другие мысли.</p><p><em><u>Идея номер раз</u></em></p><p>Идея заключалась в том, чтобы использовать <a href="https://github.com/cglib/cglib">cglib</a> который входит в состав Spring-framework, для того чтобы кинуть ошибку до вызова метода <abbr class="habraabbr" data-abbr="initMessageSource()" data-title="&lt;p&gt;&lt;/p&gt;" title="">initMessageSource()</abbr>.</p><p>Стандартный метод запуска Spring Boot приложения выглядит вот так: </p><pre><code class="java">public static void main(String[] args) {
  SpringApplication.run(DemoApplication.class, args);
}</code></pre><p>Где в статическом методе <abbr class="habraabbr" data-abbr="run" data-title="&lt;p&gt;&lt;/p&gt;" title="">run</abbr> происходит создание экземпляра <a href="https://github.com/spring-projects/spring-boot/blob/3.0.x/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java">SpringApplication</a> и его запуск: <abbr class="habraabbr" data-abbr="new SpringApplication(DemoApplication.class)).run(args)" data-title="&lt;p&gt;&lt;/p&gt;" title="">new SpringApplication(DemoApplication.class)).run(args)</abbr>. Быстренько накидал примерчик, переписав метод main запуска приложения вот так:</p><pre><code class="java">@SpringBootApplication
public class DemoApplicationV1 {

    public static void main(String[] args) {
        SpringApplication springApplication = new SpringApplication(DemoApplicationV1.class) {
            @Override
            protected ConfigurableApplicationContext createApplicationContext() {
                ConfigurableApplicationContext applicationContext = super.createApplicationContext();
                Enhancer enhancer = new Enhancer();
                enhancer.setSuperclass(applicationContext.getClass());
                enhancer.setCallback(new MethodInterceptorCglib());
                return (ConfigurableApplicationContext) enhancer.create();
            }
        };
        springApplication.run(args);
    }

    static class MethodInterceptorCglib implements MethodInterceptor {

        @Override
        public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable {
            if (method.getName().equals("initMessageSource")) {
                //printBeans((ConfigurableApplicationContext) obj);
                throw new RuntimeException("I am Explyt Plugin!!!");
            } else {
                return proxy.invokeSuper(obj, args);
            }
        }
    }
}</code></pre><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/644/f65/800/644f658009208c3b4d3fca1ffc88a825.png" height="892" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/644/f65/800/644f658009208c3b4d3fca1ffc88a825.png" width="1489"/></figure><p>И это сработало… Как видно на скриншоте, переменная obj — это и есть наш контекст, который инициализируется. В нем уже заполнена нужными нам данными beanDefinitionMap. Получается, нам надо всего лишь «переписать» метод, отвечающий за запуск проекта. Тут нет проблем с регистрацией нового бина и пакетом, где он находится. Но есть нюанс: в cglib объект контекста создается конструктором без параметров “enhancer#create()”, а это не всегда может быть так, но на практике работает. </p><p><em><u>Идея номер два</u></em></p><p>Совершенно случайно мое внимание в процессе отладки привлек интерфейс <a href="https://docs.spring.vmware.com/spring-boot/docs/3.0.16/api/org/springframework/boot/SpringApplicationRunListener.html">SpringApplicationRunListener</a>, который содержит методы обратного вызова для этапов инициализации контекста:</p><pre><code class="java">public interface SpringApplicationRunListener {

	default void starting(ConfigurableBootstrapContext bootstrapContext) {
	}

	default void environmentPrepared(ConfigurableBootstrapContext bootstrapContext,
			ConfigurableEnvironment environment) {
	}

	default void contextPrepared(ConfigurableApplicationContext context) {
	}

	default void contextLoaded(ConfigurableApplicationContext context) {
	}

	default void started(ConfigurableApplicationContext context, Duration timeTaken) {
	}

	default void ready(ConfigurableApplicationContext context, Duration timeTaken) {
	}

	default void failed(ConfigurableApplicationContext context, Throwable exception) {
	}

}</code></pre><p>В момент обработки ошибки, что я создавал на этапе выполнения метода <abbr class="habraabbr" data-abbr="initMessageSource()" data-title="&lt;p&gt;&lt;/p&gt;" title="">initMessageSource()</abbr>, процесс управления переходил в метод failed дефолтного листенера. Я подумал: может быть, в данном листенере есть метод, который вызывается после этапа завершения построения beanDefinitionMap и до инициализации бинов?</p><p>Тогда можно отказаться от cglib и переписать метод запуска без кодогенерации. Однако, такого метода не оказалось. Есть методы, которые вызывается до этапа получения метаданных и после создания инстансов бинов. </p><p>Тогда мое внимание привлекла строка <abbr class="habraabbr" data-abbr="beanPostProcess.end()" data-title="&lt;p&gt;&lt;/p&gt;" title="">beanPostProcess.end()</abbr> в методе  инициализации контекста. Что это за объект такой beanPostProcess? Это интерфейс <a href="https://docs.spring.io/spring-framework/docs/5.3.0/javadoc-api/org/springframework/core/metrics/StartupStep.html">StartupStep</a>, который отвечает за… читаем документацию — «пошаговую запись показателей конкретной фазы или действия, происходящего во время запуска приложения». Для него есть дефолтная <a href="https://github.com/spring-projects/spring-framework/blob/6.0.x/spring-core/src/main/java/org/springframework/core/metrics/DefaultApplicationStartup.java">реализация</a>, которая совсем не содержит логики и имеет пустые методы заглушки. Кроме того, у класса SpringApplication, который отвечает за запуск Spring Boot приложения, есть публичный метод, где можно задать свою имплементацию, тогда метод запуска приложения можно будет переписать без кодогенерации вот так:  </p><pre><code class="java">@SpringBootApplication
public class DemoApplicationV2 {
    public static void main(String[] args) {
        SpringApplication springApplication = new SpringApplication(DemoApplicationV2.class);
        springApplication.setApplicationStartup(new ExplytApplicationStartup());
        SpringApplicationHook applicationHook = application -&gt; new ExplytSpringApplicationRunListener();
        SpringApplication.withHook(applicationHook, () -&gt; springApplication.run(args));
    }

   private static class ExplytSpringApplicationRunListener implements SpringApplicationRunListener {
        @Override
        public void failed(ConfigurableApplicationContext context, Throwable exception) {
            //printBeans(context);
        }
    }
}</code></pre><p>Мы указываем свою имплементацию <a href="https://docs.spring.io/spring-framework/docs/5.3.0/javadoc-api/org/springframework/core/metrics/StartupStep.html">StartupStep</a> в методе <abbr class="habraabbr" data-abbr="SpringApplication#setApplicationStartup" data-title="&lt;p&gt;&lt;/p&gt;" title="">SpringApplication#setApplicationStartup</abbr>, которая кидает ошибку при вызове <abbr class="habraabbr" data-abbr="beanPostProcess.end()" data-title="&lt;p&gt;&lt;/p&gt;" title="">beanPostProcess.end()</abbr> на фазе <abbr class="habraabbr" data-abbr='this.applicationStartup.start("spring.context.beans.post-process")' data-title="&lt;p&gt;&lt;/p&gt;" title="">this.applicationStartup.start("spring.context.beans.post-process")</abbr> . Далее мы через <abbr class="habraabbr" data-abbr="SpringApplication.withHook" data-title="&lt;p&gt;&lt;/p&gt;" title="">SpringApplication.withHook</abbr> регистрируем свой листенер, где в методе <abbr class="habraabbr" data-abbr="org.springframework.boot.SpringApplicationRunListener#failed" data-title="&lt;p&gt;&lt;/p&gt;" title="">SpringApplicationRunListener#failed</abbr> получаем ссылку на текущий объект контекста, где есть метаданные beanDefinitionMap, из которых мы можем получить все, что нам нужно. Кажется, все хорошо, мы без всякой кодогенерации публичными методами фреймворка смогли получить то, что нам нужно.</p><p>Но есть опять нюанс… <abbr class="habraabbr" data-abbr="SpringApplication.withHook" data-title="&lt;p&gt;&lt;/p&gt;" title="">SpringApplication.withHook</abbr> доступен только начиная с версии Spring Boot 3.0, а это не очень хорошо так как много проектов до сих пор используют версию 2.0. Про версию 1.0 говорить небудем, тут как в анекдоте: «неудачники нам не нужны».</p><p><em><u>Идея номер три</u></em></p><p>Надо как-то исправлять положение. В голову пришло вот что:</p><pre><code class="java">@SpringBootApplication
public class DemoApplicationV3 {
    public static void main(String[] args) {
        ExplytApplicationStartup applicationStartup = new ExplytApplicationStartup();
        SpringApplication springApplication = new SpringApplication(DemoApplicationV3.class) {
            @Override
            protected ConfigurableApplicationContext createApplicationContext() {
                applicationStartup.context = super.createApplicationContext();
                return applicationStartup.context;
            }
        };
        springApplication.setApplicationStartup(applicationStartup);
        springApplication.run(args);
    }
}</code></pre><p>Переопределяем метод <abbr class="habraabbr" data-abbr="SpringApplication#createApplicationContext" data-title="&lt;p&gt;&lt;/p&gt;" title="">SpringApplication#createApplicationContext</abbr>, в котором сохраняем ссылку на контекст. Когда в applicationStartup мы будем бросать исключение,чтобы прервать процесс и не выполнять создание бинов, у нас будет ссылка на контекст с нужными нам данными. Таким образом, мы добавили поддержку, начиная с версии 2.4 без всякой кодогенерации и прочих нелегальных трюков, только используя публичное api. Напомню, что версия 2.4 вышла 10.2020, то есть срок давности имеет. Для более старых версий я решил оставить вариант с cglib, которым можно пользоваться на свой страх и риск, включив опцию «explyt.spring.native.old» в настройках Registry IDEA (double shift -&gt; explyt.spring.native.old).</p><h3>Как это в итоге работает</h3><p>Что же у нас получилось в итоге и как это работает? </p><p>Код запуска, что приведен был выше, оформлен в виде отдельного jar файла. И чтобы получить метаданные о бинах, нужно выполнить следующие действия:</p><ul><li><p>скомпилировать наше приложение,</p></li><li><p>добавить наш jar файл в -classpath запуска приложения,</p></li><li><p>запустить приложение, используя main метод из jar файла,</p></li><li><p>через “-D” параметр передать имя класса исходного приложения нашего проекта, которое нужно запустить внутри <abbr class="habraabbr" data-abbr="SpringApplication#createApplicationContext" data-title="&lt;p&gt;&lt;/p&gt;" title="">SpringApplication</abbr>,</p></li><li><p>вывести любым способом (output процесса или в виде файла) данные о бинах, которые формирует наш процесс, в формате, который мы сможем легко обработать,</p></li><li><p>загрузить эти данные в IDE.</p></li></ul><p>Команда для запуска java процесса будет выглядеть примерно вот так:</p><pre><code class="bash">java -Dexplyt.spring.appClassName=com.example.DemoApplication 
  -classpath explyt-spring-boot-bean-reader-0.1.jar:other.jars. com.explyt.spring.boot.bean.reader.SpringBootBeanReaderStarter</code></pre><p>Все это происходит автоматически под капотом. Пользователю надо только выполнить загрузку Spring Boot проекта - нажав соответствующую кнопку. Подробности далее.</p><p>Так как наш плагин уже умеет создавать ран конфигурации, мы посчитали, что будет удобно привязать запуск процесса к ран конфигурации и использовать ее в качестве отправной точки для загрузки данных о контексте. Кроме того, пользователь может задавать там дополнительные env параметры, которые могут влиять на активные спринг профили, например. </p><p>Логика работы нашего плагина следующая. При открытии спринг проекта, мы пытаемся распознать бины на основе код модели IDEA. Как правило, этого достаточно для типовых случаев. </p><p>Далее есть возможность через Explyt Spring RunConfiguration загрузить данные о бинах непосредственно из Spring. Именно благодаря ран конфигурации мы легко можем запустить в IDEA свой java процесс, добавив туда свой кастомный jar файл в classpath и поменять метод запуска. («иконка» Spring Boot с лупой)</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/771/f6f/a48/771f6fa485f66c0e312d03a0f463fef9.png" height="90" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/771/f6f/a48/771f6fa485f66c0e312d03a0f463fef9.png" width="562"/></figure><p>Да, это требует компиляции проекта. Это может быть не очень приятно, но IDEA умеет инкрементальную компиляцию и требования компиляции проекта в IDE мягче, чем требование запуска приложения. Мне приходилось работать на проектах, которые не возможно было запустить локально и вся разработка велась через тесты. После загрузки данных отображается панель с данными о бинах проекта, где по двойному клику можно перейти непосредственно к бину.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/57f/b92/456/57fb9245613cedbe904d19b8048b223e.png" height="831" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/57f/b92/456/57fb9245613cedbe904d19b8048b223e.png" width="768"/></figure><p>Эти данные мы используем, чтобы определить, является ли класс компонентом спринга. По сути, это основа для всего последующего функционала.</p><p>Для создания данной панели я использовал <a href="https://plugins.jetbrains.com/docs/intellij/external-system-integration.html">External System Integration</a>, о котором более подробно рассказывал в своей <a href="https://habr.com/ru/articles/759984/">статье</a>. Там есть пара дефектов с дублированием и лишними «иконками» вверху панели. Я заводил на это issue (<a href="https://youtrack.jetbrains.com/issue/IDEA-359334">раз</a> и <a href="https://youtrack.jetbrains.com/issue/IDEA-337922">два</a>) и даже прикладывал git‑patch, но воз и ныне там. </p><p>Работа с данным функционалом напоминает работу с билд системами Maven/Gradle. У нас есть конфигурационные файлы Spring Boot проектов - @SpringBootApplication, мы можем загружать/обновлять/удалять их через тул окно ExplytSpringBoot. Где входной точкой для начала загрузки является Explyt Spring Run Configuration.</p><p>В этой панели также можно искать бины по имени и использовать некое подобие dependency analyzer, где добавлена возможность поиска бинов по типу.</p><p>Для примера:</p><pre><code class="java">public interface MyInterface {}

@Service
class FooBean implements MyInterface {}

@Service
class BazBean implements MyInterface {}

class BarBean implements MyInterface {}</code></pre><p>Вот так выглядела бы панель dependency analyzer при попытке найти все бины, которые реализуют MyInterface:</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/776/74b/93e/77674b93ece6318a959597859ec049b8.png" height="614" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/776/74b/93e/77674b93ece6318a959597859ec049b8.png" width="1016"/></figure><p>На одном из прошлых проектов я никак не мог понять, кто создает в контексте бин для jackson конвертации. Оказалось, это был кастомный стартер, разработанный внутри компании, который, помимо прочего, не давал переопределить его. Конечно, это можно понять из логов, включив режим debug, но так, по-моему, гораздо удобнее.</p><p>В процессе работы с проектом, если мы не делаем ничего сложного, а создаем простые бины без сложных условий, таких как @Conditional, нам не нужно постоянно запускать процесс синхронизации данных из спринга. Простые случаи мы можем распознать сами и подхватывать на лету, если они находятся в корневых пакетах проекта, иначе нужно будет сделать ручную синхронизацию.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/ced/a2f/3a8/ceda2f3a812b235de28e7ded871fe099.png" height="492" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/ced/a2f/3a8/ceda2f3a812b235de28e7ded871fe099.png" width="693"/></figure><p>В панель можно добавлять несколько проектов, если у вас в репозитории несколько @SpringBootApplication. Также там отображаются доступные профили, по аналогии с  Maven панелью, которые можно включать/отключать двойным кликом. Данные о включенных профайлах синхронизируются с соответствующей ран конфигурацией. </p><p>Данные о процессе синхронизацию находятся в Build Tab. Там будут отображается ошибки компиляции, если проект не удалось собрать и логи запуска Spring. В случае нештатной ситуации - все ошибки будут там. Это упрощает процесс отладки и разбор дефектов пользователей.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/c93/389/f52/c93389f5275f9663030910fb66e7631d.png" height="423" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/c93/389/f52/c93389f5275f9663030910fb66e7631d.png" width="1199"/></figure><p>В Ultimate есть похожая панель, которая отображается, когда мы запускаем спринг из ран конфигурации. На ней видны данные о бинах из актуатора. Но насколько я могу судить, эти данные не используются для получения данных о бинах - это просто возможность посмотреть данные из актуаторов. Это более тяжелый процесс, так как приложение может очень долго стартовать, быть требовательным к наличию внешнего окружения (базы, очереди и пр.) Кроме того, не всегда есть возможность запустить проект локально. С другой стороны, эти данные более точные, поскольку бины могут создаваться сложными FactoryBean, например, Spring Data Repository. В нашем плагине мы поддерживаем такие случаи для самых известных спринг библиотек, но потенциально это один из недостатков нашего подхода.</p><h3>Подведем итоги</h3><p>Рассмотрим плюсы и минусы нативного подхода получения бинов.</p><p>Плюсы:</p><ul><li><p>используется логика Spring,</p></li><li><p>легче поддерживать — не пишем лишний код,</p></li><li><p>меньше вероятность ошибиться</p></li><li><p>IDE независимое решение.</p></li></ul><p>Так как мы запускаем отдельный спринг процесс со всеми зависимостями проекта, то можем использовать выходные данные нашего процесса (информацию о бинах) в любой IDE и минимальными усилиями добавить поддержку спринга в любую среду разработки максимально нативным способом. Также с помощью такого подхода мы легко смогли добавить поддержку @Aspect. Поскольку мы находимся в процессе спринга, мы можем использовать все его утилитные методы, чтобы найти все PointCut выражения и проверить, подходит ли под это условие «java.lang.reflect.Method». Сделать такое только через анализ модели кода - очень трудозатратно, так как нужно создать свой движок вычисления PointCut выражения на основе исходных кодов проекта. В Ultimate это реализовано именно на основе исходников.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/86c/1ba/c9a/86c1bac9a397ff3809034ea9e40ad988.png" height="655" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/86c/1ba/c9a/86c1bac9a397ff3809034ea9e40ad988.png" width="1159"/></figure><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/2b9/1fc/2da/2b91fc2daf4c925170bf333dd97a1327.png" height="402" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/2b9/1fc/2da/2b91fc2daf4c925170bf333dd97a1327.png" width="904"/></figure><p>Кроме того, с помощью данного подходамы получаем «бесплатную» поддержку xml конфигураций. Кто-то может сказать, что этим никто не пользуется, но как говорится, мелочь, а приятно. Тем более, мы для этого специально ничего не делали.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/a96/266/2a9/a962662a979bc9ed1dfa0698139d43b9.png" height="357" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/a96/266/2a9/a962662a979bc9ed1dfa0698139d43b9.png" width="959"/></figure><p>Минусы:</p><ul><li><p>в настоящее время поддерживается только Spring Boot из-за простоты нахождения root’вых точек проекты и их запуска,</p></li><li><p>требует компиляции,</p></li><li><p>если в main есть пользовательский код, то это проблема,</p></li><li><p>для бинов, которые создаются через сложные FactoryBean, нужно писать кастомные экстракторы, и мы не можем знать о всех таких случаях заранее.</p></li></ul><h3>Заключение</h3><p>Помимо распознавания бинов, плагин также содержит большое число инспекций и автодополнений кода и распознования контекста для различный Spring и смежных проектов: Spring-Core, Spring-Data, Spring-Web, Spring-AOP, Spring-Initializr, JPQL, OpenApi. </p><p>Поддерживаются языки: Java/Kotlin/Scala.</p><p>Примеры кода, использованные в статье, доступны на <a href="https://github.com/grisha9/habr-spring-article">github</a>.</p><p>Скачать можно <a href="https://explyt.com/en-download/?utm_source=habr&amp;t.coutm_campaign=post_1">тут</a>. </p><p>На <a href="https://github.com/explyt/spring-plugin/wiki/Videos">wiki</a> есть небольшие видеоролики, с примерами использования плагина.</p><p>Для обратной связи и сообщений об ошибках: <a href="https://github.com/explyt/spring-plugin/issues/new/choose">github</a></p><p>Для общения: <a href="https://t.me/explytspring">t.me/explytspring</a></p><p>Будем рады любой обратной связи и предложениям.</p><p></p></div></div></div><!-- --><!-- --></div><!-- --><!-- --></div><!--]--><!-- --><div class="tm-article-presenter__meta" data-test-id="article-meta-links"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[Spring]"><span>Spring</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[spring-boot]"><span>spring-boot</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[java]"><span>java</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kotlin]"><span>kotlin</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[idea]"><span>idea</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[plugin]"><span>plugin</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[explyt]"><span>explyt</span></a><!--]--></li><!--]--><!-- --></ul></div><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/companies/explyt/articles/"><!--[--><span>Блог компании Explyt</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/hubs/java/"><!--[--><span>Java</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/hubs/kotlin/"><!--[--><span>Kotlin</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/hubs/txt_ide/"><!--[--><span>Текстовые редакторы и IDE</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a class="tm-hubs-list__link" href="/ru/hubs/programming/"><!--[--><span>Программирование</span><!--]--></a><!--]--></li><!--]--><!-- --></ul></div></div><!-- --><!--]--></article><!--]--></div><!-- --></div><div class="tm-article-sticky-panel" data-test-id="article-sticky-panel" style=""><div class="tm-data-icons tm-data-icons tm-data-icons_space-big tm-article-sticky-panel__icons" data-test-id="article-stats-icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article" height="24" width="24"><title>Всего голосов 34: ↑31 и ↓3</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-rating"></use></svg><span class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating tm-votes-meter__value" data-test-id="votes-meter-value" title="Всего голосов 34: ↑31 и ↓3">+36</span></div><!--teleport start--><!--teleport end--><!-- --></div><!-- --><!-- --><button class="bookmarks-button tm-data-icons__item" title="Добавить в закладки" type="button"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Добавить в закладки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-favorite"></use></svg></span><span class="bookmarks-button__counter" title="Количество пользователей, добавивших публикацию в закладки">36</span></button><div class="tm-sharing tm-data-icons__item" title="Поделиться"><button class="tm-sharing__button" type="button"><svg class="tm-sharing__icon" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z" fill="currentColor"></path></svg></button><!--teleport start--><!--teleport end--></div><div class="tm-article-comments-counter-link tm-data-icons__item" title="Читать комментарии"><a class="tm-article-comments-counter-link__link" data-test-id="counter-comments" href="/ru/companies/explyt/articles/854304/comments/"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value">12</span><!--]--></a><!-- --></div><!--[--><!--[--><!--[--><!-- --><!--]--><!--]--><!--]--><!--teleport start--><!--teleport end--><!-- --></div></div></div><!--[--><!--]--><div class="tm-article-presenter__footer"><!--[--><!--[--><div class="tm-article-blocks"><!-- --><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><!-- --><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><!--[--><div class="tm-article-author" data-test-id="article-author-info"><!--[--><!--[--><div class="tm-article-author__company"><div class="tm-article-author__company-card"><div class="tm-company-snippet"><a class="tm-company-snippet__logo-link" href="/ru/companies/explyt/profile/"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="40" src="//habrastorage.org/getpro/habr/company/aa8/133/9ba/aa81339bac33487348a933529ffbfc79.png" width="40"/></div></a><div class="tm-company-snippet__info"><a class="tm-company-snippet__title" data-test-id="company-title" href="/ru/companies/explyt/profile/"><span>Explyt</span></a><div class="tm-company-snippet__description">Компания</div></div></div><div class="tm-article-author__buttons"><!-- --><!-- --></div></div><div class="tm-article-author__company-contacts"><!--[--><a class="tm-article-author__contact" href="https://explyt.com" rel="noopener" target="_blank">Сайт</a><!--]--></div><div class="tm-article-author__separator"></div></div><!--]--><!--]--><div class="tm-user-card tm-user-card tm-user-card_variant-article tm-article-author__user-card" data-async-called="true"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a class="tm-user-card__userpic tm-user-card__userpic_size-40" href="/ru/users/grisha9/"><div class="tm-entity-image"><!--[--><img alt="" class="tm-entity-image__pic" src="https://assets.habr.com/habr-web/img/avatars/096.png"/><!--]--></div></a><div class="tm-user-card__meta"><div class="tm-counter-container tm-karma tm-karma" title=" 26 голосов "><div class="tm-counter-container__header"><!--[--><div class="karma-display positive" data-v-7635202e="">22</div><!-- --><!--]--></div><div class="tm-counter-container__footer"><!--[--><div class="tm-karma__text">Карма</div><!--teleport start--><!--teleport end--><!--]--></div></div><div class="tm-counter-container" title="Рейтинг пользователя"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!-- --><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">26.1</span></span><!--]--></div><!-- --></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div></div></div></div><div class="tm-user-card__info tm-user-card__info_variant-article tm-user-card__info"><div class="tm-user-card__title tm-user-card__title_variant-article tm-user-card__title"><span class="tm-user-card__name tm-user-card__name_variant-article tm-user-card__name">Григорий Мясоедов</span><a class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article" href="/ru/users/grisha9/"> @grisha9</a><!-- --></div><p class="tm-user-card__short-info tm-user-card__short-info_variant-article tm-user-card__short-info" data-test-id="user-card-speciality">Java Developer, Open Source Contributor</p></div></div><div class="tm-user-card__buttons tm-user-card__buttons_variant-article tm-user-card__buttons"><!-- --><div class="tm-user-card__button"><div class="tm-button-follow tm-user-card__button-follow"><!-- --><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div></div><!-- --><div class="tm-user-card__button tm-user-card__button_write" data-test-id="user-card-conversations"><svg class="tm-svg-img tm-user-card__button-icon" height="16" width="16"><title>Отправить сообщение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#mail"></use></svg></div><!-- --></div><!-- --></div><!-- --></div><!--]--></div><!--]--><!-- --></section><!-- --><!--[--><div class="banner-wrapper leaderboard tm-company-article__banner" data-v-ad758baa="" style="--467224fc:200px;--58ff5eba:auto;"><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa=""><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="adfox-banner-placeholder leaderboard" data-v-12f7bcca=""><div class="image loads" data-v-12f7bcca=""></div><div class="lines" data-v-12f7bcca=""><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div></div></div><!-- --></div><div class="tm-adfox-banner" data-v-ad758baa="" id="adfox_164725660339535756"></div><!--]--></div><!-- --><!--]--><!--]--><div class="tm-article-blocks__comments"><div class="tm-article-page-comments" id="publication-comments"><div><!--[--><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style" data-test-id="counter-comments" href="/ru/companies/explyt/articles/854304/comments/"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted"> Комментарии 12 </span><!--]--></a><!-- --></div><!--]--></div></div></div><!--[--><!--[--><!--]--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2><!--[--><!--]--></div><!-- --></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><!--[--><!--[--><div class="tm-tabs tm-tabs"><div class=""><!--[--><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim tm-tabs__tab-link">Лучшие за сутки</button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_slim tm-tabs__tab-link">Похожие</button></span><!--]--></div><!-- --></div><div class="similar-and-daily__tab-view"><div class="placeholder-wrapper"><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="tm-placeholder-article-cards"><!--[--><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><!--]--></div><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --></div><!-- --></div><!--]--><!--]--></div><!--]--><!-- --></section><!--[--><!--[--><div><div class="placeholder-wrapper"><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="tm-placeholder-promo"><div class="tm-placeholder-promo__header"><div class="tm-placeholder__line tm-placeholder__line_promo-title"></div></div><div class="tm-placeholder-promo__body"><div class="tm-placeholder-promo__posts"><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div></div><div class="tm-placeholder-promo__dots"><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div></div></div></div><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --></div></div><div><div class="placeholder-wrapper"><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="tm-placeholder-inset tm-placeholder-salary"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div><div class="tm-placeholder-salary__body"><div class="tm-placeholder-salary__text"><div class="tm-placeholder__line tm-placeholder__line_salary_average"></div><div class="tm-placeholder-salary__description"><div class="tm-placeholder__line loads"></div><div class="tm-placeholder__line loads"></div><div class="tm-placeholder__line loads"></div><div class="tm-placeholder__line loads"></div></div></div><div class="tm-placeholder-salary__image loads"></div></div><div class="tm-placeholder-inset__footer tm-placeholder-inset__footer_salary"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --></div></div><!--]--><!--]--><!-- --><!--[--><!--]--><!--]--></div><!--]--><!--]--></div></div><!--]--><!--]--></div></div><div class="tm-page__sidebar"><!--[--><div class="tm-layout-sidebar"><div class="tm-layout-sidebar__placeholder_initial"></div><div class="tm-sexy-sidebar_initial tm-sexy-sidebar" style="margin-top:0px;"><!--[--><!--]--><!-- --><div class="tm-layout-sidebar__ads_initial tm-layout-sidebar__ads"><div class="banner-wrapper half-page tm-layout-sidebar__banner tm-layout-sidebar__banner_top" data-v-ad758baa="" style="--467224fc:600px;--58ff5eba:auto;"><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa=""><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="adfox-banner-placeholder half-page" data-v-12f7bcca=""><div class="image loads" data-v-12f7bcca=""></div><div class="lines" data-v-12f7bcca=""><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div></div></div><!-- --></div><div class="tm-adfox-banner" data-v-ad758baa="" id="adfox_164725680533065327"></div><!--]--></div></div><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Информация</h2><!--[--><!--]--></div><!-- --></header><!--[--><div class="tm-block__body tm-block__body"><!--[--><div class="tm-company-basic-info"><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Сайт</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[--><a class="tm-company-basic-info__link" href="https://explyt.com" target="_blank">explyt.com</a><!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Дата регистрации</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[--><time datetime="2024-10-29T10:32:13.000Z" title="2024-10-29, 13:32">29  октября  2024</time><!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Дата основания</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[--><time datetime="2024-01-20T21:00:00.000Z" title="2024-01-21, 00:00">21  января  2024</time><!--]--></dd></dl><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title_variant-columns-nowrap tm-description-list__title">Численность</dt><dd class="tm-description-list__body tm-description-list__body_variant-columns-nowrap tm-description-list__body"><!--[-->31–50 человек<!--]--></dd></dl><!-- --><!-- --></div><!--]--></div><!--]--><!-- --></section><div class="tm-company-widgets"><!--[--><!--]--></div><!-- --><section class="tm-block tm-block tm-block_spacing-around tm-stories-block" data-async-called="true" data-navigatable="" tabindex="0"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Истории</h2><!--[--><!--]--></div><!-- --></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-equal"><!--[--><div class="tm-stories-empty"><!--[--><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><!--]--></div><!-- --><!--]--></div><!--]--><!-- --></section><!--]--><div class="banner-wrapper medium-rectangle tm-layout-sidebar__banner tm-layout-sidebar__banner_bottom" data-v-ad758baa="" style="--467224fc:250px;--58ff5eba:auto;"><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa=""><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><div class="adfox-banner-placeholder medium-rectangle" data-v-12f7bcca=""><div class="image loads" data-v-12f7bcca=""></div><div class="lines" data-v-12f7bcca=""><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div><div class="line loads" data-v-12f7bcca=""></div></div></div><!-- --></div><div class="tm-adfox-banner" data-v-ad758baa="" id="adfox_164725691003361602"></div><!--]--></div></div></div><!--]--></div></div><!-- --><!--]--></div></div></main><!-- --></div><div class="tm-footer-menu"><div class="tm-page-width"><!--[--><div class="tm-footer-menu__container"><!--[--><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Ваш аккаунт</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr/?back=/ru/companies/explyt/articles/854304/&amp;hl=ru" rel="nofollow" target="_self">Войти</a></li><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr-register/?back=/ru/companies/explyt/articles/854304/&amp;hl=ru" rel="nofollow" target="_self">Регистрация</a></li><!--]--></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Разделы</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/articles/">Статьи</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/news/">Новости</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/hubs/">Хабы</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/companies/">Компании</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/users/">Авторы</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/sandbox/">Песочница</a></li><!--]--></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Информация</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/help/">Устройство сайта</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/authors/codex/">Для авторов</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/companies/corpblogs/">Для компаний</a></li><li class="tm-footer-menu__list-item"><a class="footer-menu__item-link" href="/ru/docs/docs/transparency/">Документы</a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/agreement/?hl=ru_RU" target="_blank">Соглашение</a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/confidential/?hl=ru_RU" target="_blank">Конфиденциальность</a></li><!--]--></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">Услуги</p><div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><!--[--><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/corporate-blogs/" target="_blank">Корпоративный блог</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/advertising/" target="_blank">Медийная реклама</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/native-special/" target="_blank">Нативные проекты</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/education-programs/" target="_blank">Образовательные программы</a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/hello-startup/" target="_blank">Стартапам</a></li><!--]--></ul></div></div><!--]--></div><!--]--></div></div><div class="tm-footer"><div class="tm-page-width"><!--[--><div class="tm-footer__container"><!-- --><div class="tm-footer__social"><!--[--><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Facebook</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Twitter</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>VK</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-vk"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Telegram</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Youtube</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://dzen.ru/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Яндекс Дзен</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-dzen"></use></svg></a><!--]--></div><!--teleport start--><!--teleport end--><button class="tm-footer__link"><!-- --> Настройка языка</button><a class="tm-footer__link" href="/ru/feedback/">Техническая поддержка</a><div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2025, </span><span class="tm-copyright__name"><a class="tm-copyright__link" href="https://company.habr.com/" rel="noopener" target="_blank">Habr</a></span></span></div></div><!--]--></div></div><!-- --><!--]--></div><!-- --></div></div>
<div id="overlays"><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--><!-- --><!--teleport anchor--></div>
</body>
</html>
